{"version":3,"sources":["serviceWorker.js","App/reducers.js","Views/ForumFeed/reducers.js","Views/SingleDiscussion/reducers.js","Views/NewDiscussion/reducers.js","Views/AdminDashboard/reducers.js","Views/UserProfile/reducers.js","App/store.js","App/constants.js","Views/ForumFeed/constants.js","Views/SingleDiscussion/constants.js","Views/NewDiscussion/constants.js","Views/AdminDashboard/constants.js","Views/UserProfile/constants.js","App/img/logo.png","Components/Header/UserMenu/index.js","Components/Header/NavigationBar/index.js","Containers/Header/index.js","Components/Footer/index.js","App/actions.js","App/api.js","App/App.js","Components/Header/Logo/index.js","Containers/AdminHeader/index.js","App/Admin.js","Views/AdminDashboard/api.js","Views/AdminDashboard/actions.js","Components/Dashboard/Counts/index.js","Components/Button/index.js","Components/Dashboard/ForumBox/index.js","Views/AdminDashboard/index.js","Components/RichEditor/StyleButton.js","Components/RichEditor/index.js","Components/RichEditor/BlockStyleControls.js","Components/RichEditor/InlineStyleControls.js","Components/NewDiscussion/PinButton/index.js","Components/Tag/index.js","Components/NewDiscussion/TagsInput/index.js","Views/NewDiscussion/actions.js","Views/NewDiscussion/api.js","Views/NewDiscussion/index.js","Views/ForumFeed/api.js","Views/SingleDiscussion/api.js","Views/SingleDiscussion/actions.js","Components/SingleDiscussion/Discussion/index.js","Components/SingleDiscussion/ReplyBox/index.js","Components/SingleDiscussion/Opinion/index.js","Views/SingleDiscussion/index.js","Components/FeedBox/DiscussionBox/index.js","Components/FeedBox/index.js","Components/SideBar/index.js","Views/ForumFeed/index.js","Views/ForumFeed/actions.js","Components/UserProfile/Profile/index.js","Views/UserProfile/actions.js","Views/UserProfile/api.js","Views/UserProfile/index.js","Views/NotFound/index.js","index.js","App/img/thumbsup-icon.svg"],"names":["Boolean","window","location","hostname","match","initialState","fetchingForums","forums","currentForum","error","initialUserState","fetchingUser","authenticated","_id","name","email","username","avatarUrl","githubUrl","githubLocation","githubBio","role","fetchingDiscussions","discussions","fetchingPinnedDiscussions","pinnedDiscussions","sortingMethod","fetchingDiscussion","toggleingFavorite","postingOpinion","opinionContent","opinionError","deletingDiscussion","deletedDiscussion","deletingOpinion","discussion","postingSuccess","errorMsg","postingDiscussion","title","tile","content","tags","pinned","loadingInfo","info","discussionCount","opinionCount","forumCount","userCount","creatingForum","creatingForumError","deletingForum","deletingForumError","fetchingProfile","profile","rootReducer","combineReducers","user","state","action","type","Object","assign","fetchUser","payload","app","feed","newDiscussion","adminInfo","userProfile","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","UserMenu","logIn","e","preventDefault","axios","post","userInput","emailInput","then","res","catch","console","logout","get","this","props","signedIn","userName","avatar","gitHandler","Navbar","Collapse","Nav","className","NavDropdown","id","Form","Group","Label","Control","onChange","setState","target","value","placeholder","length","EmailValidator","validate","variant","onClick","toggleSubMenu","src","alt","thumbnail","Item","href","class","Component","defaultProps","NavigationBar","navigationLinks","map","link","key","_","uniqueId","to","Header","log","forum","forum_name","forum_slug","Brand","Logo","width","height","renderNavLinks","connect","Footer","getForums","dispatch","getState","data","getUser","withCredentials","AppContainer","params","updateCurrentForum","newCurrentForum","Helmet","children","Container","viewBox","xmlns","stroke","strokeWidth","fill","fillRule","d","cx","cy","r","AdminHeader","AdminContainer","style","textAlign","marginTop","getAdminDashboardInfoAPI","createForum","forumObj","forum_obj","formData","FormData","append","mosaicImage","slug","headers","createForumAPI","forumData","created","deleteForum","forumId","forum_id","deleted","Counts","count","label","Button","fullWidth","noUppercase","alwaysActive","ForumBox","newForumTitle","newForumSlug","handleCreateForum","bind","convertedTitle","convertedSlug","trim","createAction","deleteAction","accept","files","Dashboard","getAdminDashboardInfo","forumsArray","StyleButton","onToggle","onMouseDown","React","RichEditor","editorState","EditorState","createEmpty","focus","refs","editor","onEditorStateChange","handleKeyCommand","onTab","toggleBlockType","toggleInlineStyle","contentState","convertFromRaw","JSON","parse","createWithContent","stringify","convertToRaw","getCurrentContent","command","newState","RichUtils","event","blockType","inlineStyle","contentBlock","getType","onSave","readOnly","saveButtonLabel","blockStyleFn","customBlockStyles","ref","alignSelf","PinButton","nextProps","updateValue","val","Tag","withRemove","removeAction","TagsInput","tagName","test","matched","tag","validateTag","sameTag","newTags","concat","position","slice","i","removeTag","maxTagCount","addTag","renderTags","renderInput","postDiscussion","userId","cb","validated","undefined","attr","postDiscussionApi","postCreated","setTimeout","NewDiscussion","fatalError","tileImage","updateDiscussionTags","setUserAndForumID","find","currentForumId","updateDiscussionTitle","updateDiscussionTile","updateDiscussionContent","updateDiscussionPinStatus","successCallback","onDrop","acceptedFiles","getRootProps","getInputProps","onSubmit","controlId","as","Check","Text","renderEditor","fetchDiscussions","fetchSingleDiscussion","discussion_slug","toggleFavorite","discussionId","discussion_id","put","postOpinion","opinion","discussionSlug","postOpinionApi","deletePost","delete","deletePostApi","deleteOpinion","opinionId","deleteOpinionApi","Discussion","discTitle","discContent","favoriteCount","favoriteAction","userFavorited","allowDelete","thumbsUp","userAvatar","userGitHandler","discDate","ReplyBox","posting","Opinion","opContent","opDate","currentUserId","currentUserRole","fluid","roundedCircle","SingleDiscussion","getDiscussion","deletedDiscussionRedirect","updateOpinionContent","favorites","favorited","user_id","date","opinions","userRole","userFavoritedDiscussion","deleteDiscussion","handleReplySubmit","DiscussionBox","useState","lgShow","setLgShow","discussionTitle","discussionContent","pinnedDiscussion","time","idKey","voteCount","timeDisplay","discussionType","Moment","from","Card","Body","base64","text","Modal","size","show","onHide","aria-labelledby","backgroundImage","FeedBox","onChangeSortingMethod","activeSortingMethod","loading","renderSort","renderEmptyDiscussionLine","SideBar","timer","ForumFeed","setImageModalPopover","imgName","imageOnModal","loadedEncodedImages","loadingImage","closeModal","showModal","getIndividualImage","x","y","coordinates","imageCoordinates","split","imageCoordinatesX","parseInt","imageCoordinatesY","tileSize","keys","includes","response","getCoordenate","rect","getBoundingClientRect","clientX","clientY","left","top","clearTimeout","inPopover","drawImage","currentForumObj","context","canvas","current","getContext","img","Image","that","onload","canvasWidth","canvasHeight","mosaic","tile_size","showUploadTilesButton","showUploadMosaicImageButton","toUploadTilesList","toUploadMosaicList","showSuccessMessage","successMessage","timesWider","widthHeight","quality","showTooltip","showDiscussionModal","createRef","getDiscussions","getCurrentForum","prevProps","getPinnedDiscussions","newSortingMethod","updateSortingMethod","closeButton","Title","renderNewDiscussionButtion","Popover","placement","display","onMouseOut","onMouseOver","Content","onMouseMove","Row","Col","md","handleSortingChange","admin","backgroundRepeat","backgroundSize","backgroundPosition","feedChanged","sortingChanged","method","Profile","fetchUserProfile","userSlug","fetchUserProfileApi","UserProfile","newProps","oldUsername","futureUsername","github","NotFound","ReactDOM","render","appStore","history","browserHistory","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.613f4012.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  START_FETCHING_FORUMS,\n  STOP_FETCHING_FORUMS,\n  FETCHING_FORUMS_SUCCESS,\n  FETCHING_FORUMS_FAILURE,\n  UPDATECURRENTFORUM,\n  START_FETCHING_USER,\n  FETCHING_USER_SUCCESS,\n  FETCHING_USER_FAILURE,\n} from './constants';\n\nconst initialState = {\n  fetchingForums: false,\n  forums: null,\n  currentForum: 'general',\n  error: false,\n};\n\n/**\n * reducer for top level app state\n */\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case START_FETCHING_FORUMS:\n      return Object.assign({}, state, {\n        fetchingForums: true,\n      });;\n\n    case STOP_FETCHING_FORUMS:\n      return Object.assign({}, state, {\n        fetchingForums: false,\n      });;\n\n    case FETCHING_FORUMS_SUCCESS:\n      return Object.assign({}, state, {\n        forums: action.payload,\n        fetchingForums: false,\n        error: false,\n      });\n\n    case FETCHING_FORUMS_FAILURE:\n      return Object.assign({}, state, {\n        fetchingForums: false,\n        error: 'Unable to fetch forums',\n      });\n\n    case UPDATECURRENTFORUM:\n      return Object.assign({}, state, {\n        currentForum: action.payload,\n      });\n\n    default:\n      return state;\n  }\n};\n\n/**\n * reducer for user\n */\nconst initialUserState = {\n  fetchingUser: true,\n  authenticated: false,\n  error: null,\n  _id: null,\n  name: null,\n  email: null,\n  username: null,\n  avatarUrl: null,\n  githubUrl: null,\n  githubLocation: null,\n  githubBio: null,\n  role: null,\n};\n\nexport const userReducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case START_FETCHING_USER:\n      return Object.assign({}, state, {\n        fetchUser: true,\n      });\n\n    case FETCHING_USER_SUCCESS:\n      const {\n        _id,\n        name,\n        username,\n        avatarUrl,\n        email,\n        githubBio,\n        githubUrl,\n        githubLocation,\n        role,\n      } = action.payload;\n\n      return Object.assign({}, state), {\n        fetchingUser: false,\n        authenticated: true,\n        error: null,\n        _id,\n        name,\n        username,\n        avatarUrl,\n        email,\n        githubBio,\n        githubUrl,\n        githubLocation,\n        role,\n      };\n\n    case FETCHING_USER_FAILURE:\n      return Object.assign({}, initialUserState, {\n        fetchingUser: false,\n        error: 'Unable to fetch user!',\n      });\n\n    default:\n      return state;\n  }\n};\n","import {\n  START_FETCHING_DISCUSSIONS,\n  STOP_FETCHING_DISCUSSIONS,\n  FETCHING_DISCUSSIONS_SUCCESS,\n  FETCHING_DISCUSSIONS_FAILURE,\n\n  START_FETCHING_PINNED_DISCUSSIONS,\n  STOP_FETCHING_PINNED_DISCUSSIONS,\n  FETCHING_PINNED_DISCUSSIONS_SUCCESS,\n  FETCHING_PINNED_DISCUSSIONS_FAILURE,\n\n  UPDATE_SORTING_METHOD,\n  INVALID_FORUM,\n} from './constants';\n\nconst initialState = {\n  fetchingDiscussions: true,\n  discussions: null,\n  fetchingPinnedDiscussions: true,\n  pinnedDiscussions: null,\n  sortingMethod: 'date',\n  error: null,\n};\n\nexport const feedReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case START_FETCHING_DISCUSSIONS:\n      return Object.assign({}, state, {\n        fetchingDiscussions: true,\n        error: null,\n      });;\n\n    case STOP_FETCHING_DISCUSSIONS:\n      return Object.assign({}, state, {\n        fetchingDiscussions: false,\n      });;\n\n    case FETCHING_DISCUSSIONS_SUCCESS:\n      return Object.assign({}, state, {\n        discussions: action.payload,\n        fetchingDiscussions: false,\n        error: null,\n      });\n\n    case FETCHING_DISCUSSIONS_FAILURE:\n      return Object.assign({}, state, {\n        fetchingDiscussions: false,\n        error: 'Unable to fetch discussions at the moment.',\n      });\n\n    case START_FETCHING_PINNED_DISCUSSIONS:\n      return Object.assign({}, state, {\n        fetchingPinnedDiscussions: true,\n        error: null,\n      });;\n\n    case STOP_FETCHING_PINNED_DISCUSSIONS:\n      return Object.assign({}, state, {\n        fetchingPinnedDiscussions: false,\n      });;\n\n    case FETCHING_PINNED_DISCUSSIONS_SUCCESS:\n      return Object.assign({}, state, {\n        pinnedDiscussions: action.payload,\n        fetchingPinnedDiscussions: false,\n        error: null,\n      });\n\n    case FETCHING_PINNED_DISCUSSIONS_FAILURE:\n      return Object.assign({}, state, {\n        fetchingPinnedDiscussions: false,\n        error: 'Unable to fetch pinned discussions at the moment.',\n      });\n\n\n    case UPDATE_SORTING_METHOD:\n      return Object.assign({}, state, {\n        sortingMethod: action.payload,\n      });\n\n    case INVALID_FORUM:\n      return Object.assign({}, state, {\n        error: 'Sorry, couldn\\'t find the forum.',\n        fetchingPinnedDiscussions: false,\n        fetchingDiscussions: false,\n      });\n\n    default:\n      return state;\n  }\n};\n","import {\n  FETCHING_SINGLE_DISC_START,\n  FETCHING_SINGLE_DISC_END,\n  FETCHING_SINGLE_DISC_SUCCESS,\n  FETCHING_SINGLE_DISC_FAILURE,\n\n  TOGGLE_FAVORITE_START,\n  TOGGLE_FAVORITE_SUCCESS,\n  TOGGLE_FAVORITE_FAILURE,\n\n  UPDATE_OPINION_CONTENT,\n\n  POSTING_OPINION_START,\n  POSTING_OPINION_SUCCESS,\n  POSTING_OPINION_FAILURE,\n\n  DELETE_DISC_START,\n  DELETE_DISC_SUCCESS,\n  DELETE_DISC_FAILURE,\n  DELETE_DISC_REDIRECT,\n\n  DELETE_OPINION_START,\n  DELETE_OPINION_SUCCESS,\n  DELETE_OPINION_FAILURE,\n} from './constants';\n\nconst initialState = {\n  fetchingDiscussion: true,\n  toggleingFavorite: false,\n  postingOpinion: false,\n  opinionContent: null,\n  opinionError: null,\n  deletingDiscussion: false,\n  deletedDiscussion: false,\n  deletingOpinion: null,\n  discussion: null,\n  error: null,\n};\n\nexport const singleDiscussionReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case FETCHING_SINGLE_DISC_START:\n      return Object.assign({}, state, {\n        fetchingDiscussion: true,\n      });\n\n    case FETCHING_SINGLE_DISC_END:\n      return Object.assign({}, state, {\n        fetchingDiscussion: false,\n      });\n\n    case FETCHING_SINGLE_DISC_SUCCESS:\n      return Object.assign({}, state, {\n        discussion: action.payload,\n        fetchingDiscussion: false,\n        error: null,\n      });\n\n    case FETCHING_SINGLE_DISC_FAILURE:\n      return Object.assign({}, state, {\n        fetchingDiscussion: false,\n        error: 'Unable to fetch discussion. Please check out the url.',\n      });\n\n    case TOGGLE_FAVORITE_START:\n      return Object.assign({}, state, {\n        toggleingFavorite: true,\n      });\n\n    case TOGGLE_FAVORITE_SUCCESS:\n    case TOGGLE_FAVORITE_FAILURE:\n      return Object.assign({}, state, {\n        toggleingFavorite: false,\n      });\n\n    case UPDATE_OPINION_CONTENT:\n      return Object.assign({}, state, {\n        opinionContent: action.payload,\n      });\n\n    case POSTING_OPINION_START:\n      return Object.assign({}, state, {\n        postingOpinion: true,\n        opinionError: null,\n      });\n\n    case POSTING_OPINION_SUCCESS:\n      return Object.assign({}, state, {\n        postingOpinion: false,\n        opinionContent: null,\n        opinionError: null,\n      });\n\n    case POSTING_OPINION_FAILURE:\n      return Object.assign({}, state, {\n        postingOpinion: false,\n        opinionContent: null,\n        opinionError: action.payload,\n      });\n\n    case DELETE_DISC_START:\n      return Object.assign({}, state, {\n        deletingDiscussion: true,\n      });\n\n    case DELETE_DISC_SUCCESS:\n      return Object.assign({}, state, {\n        deletingDiscussion: false,\n        deletedDiscussion: true,\n      });\n\n    case DELETE_DISC_FAILURE:\n      return Object.assign({}, state, {\n        deletingDiscussion: false,\n        deletedDiscussion: false,\n      });\n\n    case DELETE_DISC_REDIRECT:\n      return Object.assign({}, state, {\n        deletedDiscussion: false,\n      });\n\n    case DELETE_OPINION_START:\n      return Object.assign({}, state, {\n        deletingOpinion: action.payload,\n      });\n\n    case DELETE_OPINION_SUCCESS:\n    case DELETE_OPINION_FAILURE:\n      return Object.assign({}, state, {\n        deletingOpinion: null,\n      });\n\n    default:\n      return state;\n  }\n};\n","import {\n  POSTING_DISCUSSION_START,\n  POSTING_DISCUSSION_SUCCESS,\n  POSTING_DISCUSSION_FAILURE,\n\n  UPDATE_DISCUSSION_TITLE,\n  UPDATE_DISCUSSION_CONTENT,\n  UPDATE_DISCUSSION_PIN_STATUS,\n  UPDATE_DISCUSSION_TAGS,\n\n  CLEAR_SUCCESS_MESSAGE,\n  UPDATE_DISCUSSION_TILE,\n} from './constants';\n\nconst initialState = {\n  postingSuccess: false,\n  errorMsg: null,\n  postingDiscussion: false,\n  title: '',\n  tile: null,\n  content: null,\n  tags: [],\n  pinned: false,\n};\n\nexport const newDiscussionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POSTING_DISCUSSION_START:\n      return Object.assign({}, state, {\n        postingDiscussion: true,\n      });\n\n    case POSTING_DISCUSSION_SUCCESS:\n      return Object.assign({}, initialState, {\n        postingSuccess: true,\n        postingDiscussion: false,\n        errorMsg: null,\n      });\n\n    case POSTING_DISCUSSION_FAILURE:\n      return Object.assign({}, state, {\n        postingSuccess: false,\n        postingDiscussion: false,\n        errorMsg: action.payload || 'Unable to post discussion.',\n      });\n\n    case CLEAR_SUCCESS_MESSAGE:\n      return Object.assign({}, initialState, {\n        postingSuccess: false,\n      });\n\n    case UPDATE_DISCUSSION_TITLE:\n      return Object.assign({}, state, {\n        title: action.payload,\n      });\n\n    case UPDATE_DISCUSSION_CONTENT:\n\n      return Object.assign({}, state, {\n\n        content: action.payload,\n      });\n\n    case UPDATE_DISCUSSION_TILE:      \n      return Object.assign({}, state, {\n        tile: action.payload,\n      });\n\n    case UPDATE_DISCUSSION_PIN_STATUS:\n      return Object.assign({}, state, {\n        pinned: action.payload,\n      });\n\n    case UPDATE_DISCUSSION_TAGS:\n      return Object.assign({}, state, {\n        tags: action.payload,\n      });\n\n    default:\n      return state;\n  }\n};\n","import {\n  GET_ALL_INFO_START,\n  GET_ALL_INFO_SUCCESS,\n  GET_ALL_INFO_FAILURE,\n\n  CREATE_FORUM,\n  CREATE_FORUM_SUCCESS,\n  CREATE_FORUM_FAILURE,\n\n  DELETE_FORUM,\n  DELETE_FORUM_SUCCESS,\n  DELETE_FORUM_FAILURE,\n} from './constants';\n\nconst initialState = {\n  loadingInfo: false,\n  info: {\n    discussionCount: 0,\n    opinionCount: 0,\n    forumCount: 0,\n    userCount: 0,\n    forums: [],\n  },\n  error: null,\n\n  creatingForum: false,\n  creatingForumError: null,\n\n  deletingForum: false,\n  deletingForumError: null,\n};\n\nexport const adminInfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_INFO_START:\n      return Object.assign({}, state, {\n        loadingInfo: true,\n        error: null,\n      });\n\n    case GET_ALL_INFO_SUCCESS:\n      return Object.assign({}, state, {\n        loadingInfo: false,\n        info: action.payload,\n        error: null,\n      });\n\n    case GET_ALL_INFO_FAILURE:\n      return Object.assign({}, state, {\n        loadingInfo: false,\n        error: 'Something went wrong while loading admin level information.',\n      });\n\n    case CREATE_FORUM:\n      return Object.assign({}, state, {\n        creatingForumError: null,\n        creatingForum: true,\n      });\n\n    case CREATE_FORUM_SUCCESS:\n      return Object.assign({}, state, {\n        creatingForum: false,\n        creatingForumError: null,\n      });\n\n    case CREATE_FORUM_FAILURE:\n      return Object.assign({}, state, {\n        creatingForum: false,\n        creatingForumError: 'Something went wrong while trying to create the forum. Please try again. Also check out if the forum already exists.',\n      });\n\n    case DELETE_FORUM:\n      return Object.assign({}, state, {\n        deletingForum: true,\n        deletingForumError: null,\n      });\n\n    case DELETE_FORUM_SUCCESS:\n      return Object.assign({}, state, {\n        deletingForum: false,\n        deletingForumError: null,\n      });\n\n    case DELETE_FORUM_FAILURE:\n      return Object.assign({}, state, {\n        deletingForum: false,\n        deletingForumError: 'Something went wrong while trying to delete the forum. Please try again later.',\n      });\n\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_USER_PROFILE_START,\n  FETCH_USER_PROFILE_SUCCESS,\n  FETCH_USER_PROFILE_FAILURE,\n} from './constants';\n\nconst initialState = {\n  fetchingProfile: true,\n  profile: {},\n  error: null,\n};\n\nexport const userProfileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USER_PROFILE_START:\n      return Object.assign({}, state, {\n        fetchingProfile: true,\n        error: null,\n      });\n\n    case FETCH_USER_PROFILE_SUCCESS:\n      return Object.assign({}, state, {\n        fetchingProfile: false,\n        profile: action.payload,\n        error: null,\n      });\n\n    case FETCH_USER_PROFILE_FAILURE:\n      return Object.assign({}, state, {\n        fetchingProfile: false,\n        error: 'Unable to fetch user profile. Please check out for correct username.',\n      });\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { appReducer, userReducer } from './reducers';\nimport { feedReducer } from '../Views/ForumFeed/reducers';\nimport { singleDiscussionReducer } from '../Views/SingleDiscussion/reducers';\nimport { newDiscussionReducer } from '../Views/NewDiscussion/reducers';\nimport { adminInfoReducer } from '../Views/AdminDashboard/reducers';\nimport { userProfileReducer } from '../Views/UserProfile/reducers';\n\n// root reducer for app\nconst rootReducer = combineReducers({\n  user: userReducer,\n  app: appReducer,\n  feed: feedReducer,\n  discussion: singleDiscussionReducer,\n  newDiscussion: newDiscussionReducer,\n  adminInfo: adminInfoReducer,\n  userProfile: userProfileReducer,\n});\n\n// dev tool extension\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// application store\nlet store = createStore(\n  rootReducer,\n  /* preloaded state, */\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;\n","export const UPDATECURRENTFORUM = 'update_current_forum';\n\nexport const START_FETCHING_FORUMS = 'start_fetching_forums';\nexport const STOP_FETCHING_FORUMS = 'stop_fetching_forums';\nexport const FETCHING_FORUMS_SUCCESS = 'fetching_forums_success';\nexport const FETCHING_FORUMS_FAILURE = 'fetching_forums_failure';\n\nexport const START_FETCHING_USER = 'start_fetching_user';\nexport const FETCHING_USER_SUCCESS = 'fetching_user_success';\nexport const FETCHING_USER_FAILURE = 'fetching_user_failure';\nexport const SIGNOUT_USER_SUCCESS = 'signOut_user_success';\nexport const SIGNOUT_USER_FAILURE = 'signOut_user_failure';\n","export const START_FETCHING_DISCUSSIONS = 'start_fetching_discussions';\nexport const STOP_FETCHING_DISCUSSIONS = 'stop_fetching_discussions';\nexport const FETCHING_DISCUSSIONS_SUCCESS = 'fetching_discussions_success';\nexport const FETCHING_DISCUSSIONS_FAILURE = 'fetching_discussions_failure';\n\nexport const START_FETCHING_PINNED_DISCUSSIONS = 'start_fetching_pinned_discussions';\nexport const STOP_FETCHING_PINNED_DISCUSSIONS = 'stop_fetching_pinned_discussions';\nexport const FETCHING_PINNED_DISCUSSIONS_SUCCESS = 'fetching_pinned_discussions_success';\nexport const FETCHING_PINNED_DISCUSSIONS_FAILURE = 'fetching_pinned_discussions_failure';\n\nexport const UPDATE_SORTING_METHOD = 'update_sorting_method';\nexport const INVALID_FORUM = 'invalid_forum';\n","export const FETCHING_SINGLE_DISC_START = 'fetching_single_discussion_start';\nexport const FETCHING_SINGLE_DISC_END = 'fetching_single_discussion_end';\nexport const FETCHING_SINGLE_DISC_SUCCESS = 'fetching_single_discussion_success';\nexport const FETCHING_SINGLE_DISC_FAILURE = 'fetching_single_discussion_failure';\n\nexport const TOGGLE_FAVORITE_START = 'toggle_favorite_start';\nexport const TOGGLE_FAVORITE_SUCCESS = 'toggle_favorite_success';\nexport const TOGGLE_FAVORITE_FAILURE = 'toggle_favorite_failure';\n\nexport const UPDATE_OPINION_CONTENT = 'update_opinion_content';\n\nexport const POSTING_OPINION_START = 'posting_opinion_start';\nexport const POSTING_OPINION_SUCCESS = 'posting_opinion_success';\nexport const POSTING_OPINION_FAILURE = 'posting_opinion_failure';\n\nexport const DELETE_DISC_START = 'delete_disc_start';\nexport const DELETE_DISC_SUCCESS = 'delete_disc_success';\nexport const DELETE_DISC_FAILURE = 'delete_disc_failure';\nexport const DELETE_DISC_REDIRECT = 'delete_disc_redirect';\n\nexport const DELETE_OPINION_START = 'delete_opinion_start';\nexport const DELETE_OPINION_SUCCESS = 'delete_opinion_success';\nexport const DELETE_OPINION_FAILURE = 'delete_opinion_failure';\n","export const POSTING_DISCUSSION_START = 'posting_discussion_start';\nexport const POSTING_DISCUSSION_END = 'posting_discussion_end';\nexport const POSTING_DISCUSSION_SUCCESS = 'posting_discussion_success';\nexport const POSTING_DISCUSSION_FAILURE = 'posting_discussion_failure';\n\nexport const UPDATE_DISCUSSION_TITLE = 'update_discussion_title';\nexport const UPDATE_DISCUSSION_CONTENT = 'update_discussion_content';\nexport const UPDATE_DISCUSSION_TILE = 'update_discussion_tile';\nexport const UPDATE_DISCUSSION_PIN_STATUS = 'update_discussion_pin_status';\nexport const UPDATE_DISCUSSION_TAGS = 'update_discussion_tags';\n\nexport const CLEAR_SUCCESS_MESSAGE = 'clear_success_message';\n","export const GET_ALL_INFO_START = 'get_all_info_start';\nexport const GET_ALL_INFO_SUCCESS = 'get_all_info_success';\nexport const GET_ALL_INFO_FAILURE = 'get_all_info_failure';\n\nexport const CREATE_FORUM = 'create_forum';\nexport const CREATE_FORUM_SUCCESS = 'create_forum_success';\nexport const CREATE_FORUM_FAILURE = 'create_forum_failure';\n\nexport const DELETE_FORUM = 'delete_forum';\nexport const DELETE_FORUM_SUCCESS = 'delete_forum_success';\nexport const DELETE_FORUM_FAILURE = 'delete_forum_failure';\n","export const FETCH_USER_PROFILE_START = 'fetch_user_profile_start';\nexport const FETCH_USER_PROFILE_SUCCESS = 'fetch_user_profile_success';\nexport const FETCH_USER_PROFILE_FAILURE = 'fetch_user_profile_failure';\n","export default __webpack_public_path__ + \"static/media/logo.6aae43f7.png\";","import React, { Component } from 'react';\nimport { Button, Image, Navbar, Nav, NavDropdown, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport EmailValidator from 'email-validator';\n\n\n\nclass UserMenu extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n      emailInput: ''\n    }\n  }\n\n  logIn = (e) => {\n    e.preventDefault()\n    axios.post(`/api/user/authViaGitHub?user=${this.state.userInput}&email=${this.state.emailInput}`).then(function (res) {\n      window.location = '/'\n\n    })\n      .catch(function (error) {\n        console.error(error)\n      })\n  }\n\n  logout = () => {\n    axios.get(`/api/user/signout`).then(function (res) {\n      window.location = '/'\n\n    })\n      .catch(function (error) {\n        console.error(error)\n      })\n  }\n  render() {\n    const {\n      signedIn,\n      userName,\n      avatar,\n      gitHandler\n\n    } = this.props;\n\n\n\n\n    return (\n      <div>\n        <Navbar.Collapse>\n          <Nav className=\"mr-auto\">            \n            <NavDropdown title={signedIn ? userName : 'Sign Up / Sign In'} id=\"basic-nav-dropdown\">\n              {!signedIn && <Form className=\"p-3\">\n                <Form.Group>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"text\" onChange={(e) => this.setState({ userInput: e.target.value })} placeholder=\"Enter user\" />\n                </Form.Group>\n                <Form.Group >\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" onChange={(e) => this.setState({ emailInput: e.target.value })} placeholder=\"Enter email\" />\n                </Form.Group>\n\n                {this.state.userInput.length && EmailValidator.validate(this.state.emailInput) ? <Button variant=\"primary\" type=\"submit\" onClick={this.logIn}>\n                  Submit\n                </Button> : null}\n              </Form>}\n\n              {signedIn && <span onClick={this.toggleSubMenu}>\n                <Image src={avatar} alt={`${userName} Avatar`} className=\"w-100\" thumbnail />\n\n                <NavDropdown.Item href={`/user/${gitHandler}`}>My Profile</NavDropdown.Item>\n\n              </span>}\n              {/* { signedIn && <a  href={'#'}>Settings</a> } */}\n              {signedIn &&\n                <span onClick={this.logout} class=\"dropdown-item\" href={`/api/user/signout`}>Sign Out</span>\n              }\n            </NavDropdown>\n          </Nav>\n\n        </Navbar.Collapse>\n\n\n      </div>\n    );\n\n\n\n  }\n}\n\nUserMenu.defaultProps = {\n  signedIn: false,\n  userName: '',\n  gitHandler: '',\n  avatar: '',\n};\n\n/* UserMenu.propTypes = {\n  signedIn: React.PropTypes.bool.isRequired,\n  userName: React.PropTypes.string,\n  gitHandler: React.PropTypes.string,\n  avatar: React.PropTypes.string,\n}; */\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport { Link, IndexLink } from 'react-router';\n\nimport _ from 'lodash';\n\n\nclass NavigationBar extends Component {\n  render() {\n    const {\n      navigationLinks,\n    } = this.props;\n\n    if (navigationLinks) {\n      return (\n        <section className=\"w-100 navigation-bar\">\n          <ul className=\"d-flex justify-content-around\">\n            {navigationLinks.map(link => {\n              if (link.id === 0) {\n                return (\n                  <li key={_.uniqueId('navLink_')}>\n                    <IndexLink\n\n\n                      to='/'\n                    >\n                      Home\n                  </IndexLink>\n                  </li>\n                );\n              }\n\n              return (\n                <li key={_.uniqueId('navLink_')}>\n                  <Link\n\n\n                    to={link.link}\n                  >\n                    {link.name}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n\n      );\n    }\n\n    return null;\n  }\n}\n\nNavigationBar.defaultProps = {\n  navigationLinks: [\n    {\n      id: 0,\n      name: 'General',\n      link: '/',\n    },\n  ],\n};\n\n/* NavigationBar.propTypes = {\n  navigationLinks: React.PropTypes.array,\n}; */\n\nexport default NavigationBar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport Logo from '../../App/img/logo.png'\n\n\n\n// components for Header\nimport UserMenu from '../../Components/Header/UserMenu';\nimport NavigationBar from '../../Components/Header/NavigationBar';\n\n\nclass Header extends Component {\n  renderNavLinks() {\n    const { forums } = this.props;\n    console.log('hello')\n    console.log(forums)\n    if (forums) {\n      return forums.map((forum) => {\n        return {\n          id: forum._id,\n          name: forum.forum_name,\n          link: `/${forum.forum_slug}`,\n        };\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      authenticated,\n      name,\n      username,\n      avatarUrl,\n    } = this.props.user;\n\n    return (\n      <header >\n        <Navbar className=\"flex-wrap\" variant=\"dark\">\n\n          <div className=\"d-flex w-100 justify-content-between\">\n            <Navbar.Brand href=\"/\">\n              <img\n                src={Logo}\n                width=\"auto\"\n                height=\"40\"\n\n                alt=\"logo\"\n              />\n            </Navbar.Brand>\n            <UserMenu\n              signedIn={authenticated}\n              userName={name || username}\n              gitHandler={username}\n              avatar={avatarUrl}\n            />\n          </div>\n\n          <NavigationBar\n            navigationLinks={this.renderNavLinks()}\n          />\n        </Navbar>\n      </header>\n\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      user: state.user,\n      forums: state.app.forums,\n    };\n  }\n)(Header);\n","import React, { Component } from 'react';\n\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div >\n        {/* Copyright? Who cares? :-) */}\n      </div>\n    );\n  }\n}\n\n\nFooter.defaultProps = {\n};\n\n/* Footer.propTypes = {\n}; */\n\nexport default Footer;\n","import {\n  START_FETCHING_FORUMS,  \n  FETCHING_FORUMS_SUCCESS,\n  FETCHING_FORUMS_FAILURE,\n  UPDATECURRENTFORUM,\n  START_FETCHING_USER,\n  FETCHING_USER_SUCCESS,\n  FETCHING_USER_FAILURE,\n} from './constants';\nimport {\n  fetchForums,\n  fetchUser  \n} from './api';\n\n/**\n * get all forum list\n * @return {action}\n */\nexport const getForums = () => {\n  return (dispatch, getState) => {\n    dispatch({ type: START_FETCHING_FORUMS });\n\n    fetchForums().then(\n      data => dispatch({ type: FETCHING_FORUMS_SUCCESS, payload: data.data }),\n      error => dispatch({ type: FETCHING_FORUMS_FAILURE })\n    );\n  };\n};\n\n/**\n * update current forum when route change occurs\n * @param  {String} currentForum\n * @return {action}\n */\nexport const updateCurrentForum = (currentForum) => {\n  return {\n    type: UPDATECURRENTFORUM,\n    payload: currentForum,\n  };\n};\n\n/**\n * get the current user from server\n * @return {action}\n */\nexport const getUser = () => {\n  return (dispatch, getState) => {\n    dispatch({ type: START_FETCHING_USER });\n\n    fetchUser().then(\n      data => {\n        if (!data.data._id) dispatch({ type: FETCHING_USER_FAILURE });\n        else dispatch({ type: FETCHING_USER_SUCCESS, payload: data.data });\n      },\n      error => dispatch({ type: FETCHING_USER_FAILURE })\n    );\n  };\n};\n","import axios from 'axios';\n\nexport const fetchForums = (forum_id) => {\n  return axios.get('/api/forum');\n};\n\nexport const fetchUser = () => {\n  return axios.get('/api/user/getUser', {withCredentials: true});\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport Header from '../Containers/Header';\nimport Footer from '../Components/Footer';\nimport './style/style.scss';\nimport { Container } from 'react-bootstrap';\n\n\nimport { getForums, updateCurrentForum, getUser } from './actions';\n\nclass AppContainer extends Component {\n  componentDidMount() {\n    const {\n      params,\n      updateCurrentForum,\n      getForums,\n      getUser,\n    } = this.props;\n\n    // get all forum list\n    getForums();\n\n    // check for authenticated user\n    getUser();\n\n    // set current forum based on route\n    const currentForum = params.forum || '';\n    updateCurrentForum(currentForum);\n  }\n\n  componentDidUpdate() {\n    const {\n      forums,\n      params,\n      currentForum,\n      updateCurrentForum,\n    } = this.props;\n\n    let newCurrentForum = '';\n    if (params.forum) newCurrentForum = params.forum;\n    else if (forums && forums.length) newCurrentForum = forums[0].forum_slug;\n\n    // update current forum if necessery\n    if (newCurrentForum !== currentForum) updateCurrentForum(newCurrentForum);\n  }\n\n  render() {\n    const { forums } = this.props;\n\n    // render only if we get the forum lists\n    if (forums) {\n      return (\n        <div>\n          <Helmet ><title>Mosaic Forum</title></Helmet>\n\n\n          <Header />\n          <main>\n            {this.props.children}\n          </main>\n\n          <Footer />\n        </div>\n      );\n    }\n\n    return (\n      <Container >\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      forums: state.app.forums,\n      currentForum: state.app.currentForum,\n    };\n  },\n  (dispatch) => {\n    return {\n      getForums: () => { dispatch(getForums()); },\n      updateCurrentForum: (currentForum) => { dispatch(updateCurrentForum(currentForum)); },\n      getUser: () => { dispatch(getUser()); },\n    };\n  }\n)(AppContainer);\n","import React from 'react';\n\n\nconst Logo = () => {\n  return (\n    <div >\n      <div >\n        <svg viewBox=\"0 0 100 100\"xmlns=\"http://www.w3.org/2000/svg\">\n          <g id=\"Group\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <path d=\"M51.1388842,81.5721454 L69.5667388,100 L92.0066458,100 C96.4114635,100 100,96.4212534 100,92.0066458 L100,7.99335421 C100,3.58853654 96.4212534,0 92.0066458,0 L7.99335421,0 C3.58853654,0 0,3.57874658 0,7.99335421 L0,92.0066458 C0,96.4114635 3.57874658,100 7.99335421,100 L10.5882353,100 L10.5882353,44.7058824 C10.7474244,24.5366987 27.1464843,8.23529412 47.3529412,8.23529412 C67.6575276,8.23529412 84.1176471,24.6954136 84.1176471,45 C84.1176471,64.0263195 69.6647717,79.676989 51.1388842,81.5721454 Z M24.2232146,73.5788183 L24.1176471,73.6843859 L50.4332612,100 L24.1176471,100 L24.1176471,73.4929507 C24.1527823,73.521637 24.1879715,73.5502596 24.2232146,73.5788183 Z\" id=\"Combined-Shape\" fill=\"#F1C40F\"></path>\n            <circle id=\"Oval\" fill=\"#F1C40F\" cx=\"47.6470588\" cy=\"45.2941176\" r=\"23.5294118\"></circle>\n          </g>\n        </svg>\n      </div>\n      <div >ReForum</div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// components for AdminHeader\nimport UserMenu from '../../Components/Header/UserMenu';\nimport Logo from '../../Components/Header/Logo';\nimport NavigationBar from '../../Components/Header/NavigationBar';\n\n\nclass AdminHeader extends Component {\n  renderNavLinks() {\n    return [\n      { name: 'Dashboard', link: '/admin' },\n    ];\n  }\n\n  render() {\n    const {\n      authenticated,\n      name,\n      username,\n      avatarUrl,\n    } = this.props.user;\n\n    return (\n      <div >\n        <div >\n          <Logo />\n          Welcome Admin\n          <UserMenu\n            signedIn={authenticated}\n            userName={name || username}\n            gitHandler={username}\n            avatar={avatarUrl}\n          />\n        </div>\n        <NavigationBar\n          navigationLinks={this.renderNavLinks()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => { return {\n    user: state.user,\n    forums: state.app.forums,\n  }; }\n)(AdminHeader);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { getUser } from './actions';\n\nimport AdminHeader from '../Containers/AdminHeader';\n\n\n\nclass AdminContainer extends Component {\n  componentDidMount() {\n    // fetch the user\n    this.props.getUser();\n  }\n\n  render() {\n    const { user } = this.props;\n\n    if (user.fetchingUser) {\n      return (\n        <div style={{ textAlign: 'center', marginTop: 20 }}>\n          Loading users profile...\n        </div>\n      );\n    }\n\n    if (user.role === 'admin') {\n      return (\n        <div>\n          <Helmet><title>ReForum | Admin</title></Helmet>\n          <AdminHeader />\n          {this.props.children}\n        </div>\n      );\n    }\n    else {\n      return (\n        <div style={{ textAlign: 'center', marginTop: 20 }}>\n          We are cordially sorry that you are not allowed to view admin panel!<br />\n          Please go back to <Link to='/'>root</Link> page.\n        </div>\n      );\n    }\n\n    return (\n      <div style={{ textAlign: 'center', marginTop: 20 }}>\n        Something went wrong.<br />\n        Please go back to <Link to='/'>root</Link> page.\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => { return {\n    user: state.user,\n  }; },\n  (dispatch) => { return {\n    getUser: () => { dispatch(getUser()); },\n  }; }\n)(AdminContainer);\n","import axios from 'axios';\n\n\nexport const getAdminDashboardInfoAPI = () => {\n  return (axios.get('/api/admin/admin_dashboard_info'));\n};\n\nexport const createForumAPI = (forum_obj) => {\n  const formData = new FormData();\n  \n  formData.append('img', forum_obj.mosaicImage);\n  formData.append('title', forum_obj.title);\n  formData.append('slug', forum_obj.slug);\n\n  return (axios.post('/api/admin/create_forum', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }));\n};\n\nexport const deleteForumAPI = (forum_id) => {\n  return (axios.post('/api/admin/delete_forum', { forum_id }));\n};\n","import {\n  GET_ALL_INFO_START,\n  GET_ALL_INFO_SUCCESS,\n  GET_ALL_INFO_FAILURE,\n\n  CREATE_FORUM,\n  CREATE_FORUM_SUCCESS,\n  CREATE_FORUM_FAILURE,\n\n  DELETE_FORUM,\n  DELETE_FORUM_SUCCESS,\n  DELETE_FORUM_FAILURE,\n} from './constants';\n\nimport {FETCHING_DISCUSSIONS_FAILURE} from '../ForumFeed/constants'\n\nimport {\n  getAdminDashboardInfoAPI,\n  createForumAPI,\n  deleteForumAPI,\n} from './api';\n\n/**\n * get all the info needed for dashboard\n * @return {action}\n */\nexport const getAdminDashboardInfo = () => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_ALL_INFO_START });\n\n    getAdminDashboardInfoAPI().then(\n      data => dispatch({ type: GET_ALL_INFO_SUCCESS, payload: data.data }),\n      error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE, payload: error })\n    );\n  };\n};\n\n/**\n * create a new forum\n * @param  {Object} forumObj\n * @return {action}\n */\nexport const createForum = (forumObj) => {\n  return (dispatch, getState) => {\n    dispatch({ type: CREATE_FORUM });\n\n    // call the create forum api\n    createForumAPI(forumObj).then(\n      forumData => {\n        // get admin info again to refresh the infos\n        getAdminDashboardInfoAPI().then(\n          data => {\n            // data is refreshed\n            dispatch({ type: GET_ALL_INFO_SUCCESS, payload: data.data });\n\n            // check if the forum was created\n            if (forumData.data.created) { dispatch({ type: CREATE_FORUM_SUCCESS }); }\n            else dispatch({ type: CREATE_FORUM_FAILURE });\n          },\n          error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE, payload: error })\n        );\n      },\n      error => dispatch({ type: CREATE_FORUM_FAILURE })\n    );\n  };\n};\n\nexport const deleteForum = (forumId) => {\n  return (dispatch, getState) => {\n    dispatch({ type: DELETE_FORUM });\n\n    deleteForumAPI(forumId).then(\n      forumData => {\n        dispatch({ type: GET_ALL_INFO_START });\n\n        // get admin info again to refresh the infos\n        getAdminDashboardInfoAPI().then(\n          data => {\n            dispatch({ type: GET_ALL_INFO_SUCCESS, payload: data.data });\n\n            // check if th eforum was deleted\n            if (forumData.data.deleted) { dispatch({ type: DELETE_FORUM_SUCCESS }); }\n            else dispatch({ type: DELETE_FORUM_FAILURE });\n          },\n          error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE, payload: error })\n        );\n      },\n      error => dispatch({ type: DELETE_FORUM_FAILURE })\n    );\n  };\n};\n","import React, { Component } from 'react';\n\n\n\nclass Counts extends Component {\n  render() {\n    const {\n      count,\n      label,\n    } = this.props;\n\n    return (\n      <div >\n        <div >{count}</div>\n        <div >{label}</div>\n      </div>\n    );\n  }\n}\n\nCounts.defaultProps = {\n  count: 0,\n  label: 'default',\n};\n\n/* Counts.propTypes = {\n  count: React.PropTypes.number,\n  label: React.PropTypes.string,\n}; */\n\nexport default Counts;\n","import React, { Component } from 'react';\n\nclass Button extends Component {\n  render() {\n    const {\n      type,\n      fullWidth,\n      noUppercase,\n      className,\n      style,\n      onClick,\n      alwaysActive,\n    } = this.props;\n\n    return (\n      <button\n        onClick={onClick}\n\n        style={style}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nButton.defaultProps = {\n  type: 'default',\n  fullWidth: false,\n  noUppercase: false,\n  alwaysActive: false,\n  className: '',\n  style: {},\n  onClick: () => { },\n};\n\n/* Button.propTypes = {\n  //type: React.PropTypes.oneOf(['default', 'outline']),\n  fullWidth: React.PropTypes.bool,\n  noUppercase: React.PropTypes.bool,\n  alwaysActive: React.PropTypes.bool,\n  className: React.PropTypes.string,\n  style: React.PropTypes.object,\n  onClick: React.PropTypes.func,\n}; */\n\nexport default Button;\n","import React, { Component } from 'react';\n\n\n\nimport Button from '../../../Components/Button';\n\nclass ForumBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newForumTitle: '',\n      newForumSlug: '',\n      errorMsg: null,\n      mosaicImage: null\n    };\n\n    this.handleCreateForum = this.handleCreateForum.bind(this);\n  }\n\n  handleCreateForum() {\n    // remove any error messages\n    this.setState({ errorMsg: null });\n\n    const {\n      newForumTitle,\n      newForumSlug,\n      mosaicImage\n    } = this.state;\n\n    let convertedTitle = null;\n    let convertedSlug = null;\n\n    // check and convert forum title\n    if (newForumTitle !== '') {\n      // trim any leading or ending white spaces\n      convertedTitle = newForumTitle.trim();\n\n      // check the length, 4 is hardcoded here\n      if (convertedTitle.length < 4) {\n        return this.setState({ errorMsg: 'Forum title should have at least 4 charecters.' });\n      }\n    } else {\n      return this.setState({ errorMsg: 'Forum title is empty. Please provide a valid Forum Title.' });\n    }\n\n    //check mosaic image\n    if(!mosaicImage) return this.setState({errorMsg: 'Select an image for mosaic.' })\n    // check and confirm forum slug\n    if (convertedSlug !== '') {\n      const slugRegex = /^[a-z\\_]+$/;\n      convertedSlug = newForumSlug.match(slugRegex) ? newForumSlug : null;\n\n      // length check\n      if (convertedSlug && convertedSlug.length < 4) {\n        return this.setState({ errorMsg: 'Forum slug should have at least 4 charecters.' });\n      }\n    } else {\n      return this.setState({ errorMsg: 'Forum slug is empty. Please provide a valid Forum Slug.' });\n    }\n\n    if (!convertedTitle) { return this.setState({ errorMsg: 'Please provide a valid Forum Title.' }); }\n    if (!convertedSlug) { return this.setState({ errorMsg: 'Please provide a valid Forum Slug. Slug can only contain small case alphabets and underscore.' }); }\n\n    if (convertedTitle && convertedSlug) { this.props.createAction({ title: convertedTitle, slug: convertedSlug, mosaicImage }); }\n  }\n\n  render() {\n    const {\n      forums,\n      creatingForum,\n      deleteAction,\n      deletingForum,\n    } = this.props;\n\n    const {\n      newForumTitle,\n      newForumSlug,\n      errorMsg,\n    } = this.state;\n\n    return (\n      <div >\n        <div >Current Forums</div>\n        <div >\n          { deletingForum && <div >Removing forum, please wait...</div> }\n\n          { forums.map((forum) => <div key={forum.id} >\n            <div >{ forum.name }</div>\n            <div >({ forum.slug })</div>\n            <div >\n              <Button onClick={() => { deleteAction(forum.id); }}>Remove</Button>\n            </div>\n          </div>) }\n\n        </div>\n\n        <div >\n          { creatingForum && <div >Creating forum, please wait...</div> }\n          <div >Create New Forum</div>\n          <div >\n            <div >\n              <div >Title: </div>\n              <input\n                type={'text'}\n\n                placeholder={'Forum Title'}\n                onChange={(e) => { this.setState({ newForumTitle: e.target.value }); }}\n              />\n            </div>\n            <div >\n              <div >Slug: </div>\n              <input\n                type={'text'}\n\n                placeholder={'forum_slug'}\n                onChange={(e) => { this.setState({ newForumSlug: e.target.value }); }}\n              />\n            </div>\n            <div >\n              <div >Mosaic Image: </div>\n              <input\n                type={'file'}                        \n                accept=\"image/jpeg\" \n                name=\"img\"                 \n                onChange={(e) => { this.setState({ mosaicImage: e.target.files[0] }); }}\n              />\n            </div>\n            <Button onClick={this.handleCreateForum}>Create</Button>\n          </div>\n          { errorMsg && <div >{errorMsg}</div> }\n        </div>\n      </div>\n    );\n  }\n}\n\nForumBox.defaultProps = {\n};\n\n/* ForumBox.propTypes = {\n  forums: React.PropTypes.array,\n  deletingForum: React.PropTypes.bool,\n  deleteAction: React.PropTypes.func,\n  creatingForum: React.PropTypes.bool,\n  createAction: React.PropTypes.func,\n}; */\n\nexport default ForumBox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\n\n\nimport {getForums} from '../../App/actions'\nimport {\n  getAdminDashboardInfo,\n  createForum,\n  deleteForum,\n} from './actions';\nimport Counts from '../../Components/Dashboard/Counts';\nimport ForumBox from '../../Components/Dashboard/ForumBox';\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    // get information needed for dashboard\n    this.props.getAdminDashboardInfo();\n  }\n\n  render() {\n    const {\n      discussionCount,\n      opinionCount,\n      forumCount,\n      userCount,\n      forums,\n    } = this.props.adminInfo.info;\n\n    const {\n      loadingInfo,\n      creatingForum,\n      creatingForumError,\n      deletingForum,\n      deletingForumError,\n    } = this.props;\n\n    const forumsArray = forums.map((forum) => {\n      return { id: forum._id, name: forum.forum_name, slug: forum.forum_slug };\n    });\n\n    return (\n      <div >\n        { loadingInfo && <div >\n          Loading dashboard info...\n        </div> }\n\n        <div >\n          <Counts label={'Users'} count={userCount} />\n          <Counts label={'Discussions'} count={discussionCount} />\n          <Counts label={'Opinions'} count={opinionCount} />\n          <Counts label={'Forums'} count={forumCount} />\n        </div>\n\n        <ForumBox\n          forums={forumsArray}\n          deletingForum={deletingForum}\n          deleteAction={(forumId) => { this.props.deleteForum(forumId); }}\n          creatingForum={creatingForum}\n          createAction={(forumObj) => { this.props.createForum(forumObj); }}\n        />\n\n        { creatingForumError && <div >{creatingForumError}</div> }\n        { deletingForumError && <div >{deletingForumError}</div> }\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => { return {\n    adminInfo: state.adminInfo,\n    loadingInfo: state.adminInfo.loadingInfo,\n    creatingForum: state.adminInfo.creatingForum,\n    creatingForumError: state.adminInfo.creatingForumError,\n    deletingForum: state.adminInfo.deletingForum,\n    deletingForumError: state.adminInfo.deletingForumError,\n  }; },\n  (dispatch) => { return {\n    getAdminDashboardInfo: () => { dispatch(getAdminDashboardInfo()); },\n    getForums: () => { dispatch(getForums()); },\n    deleteForum: (forumId) => { dispatch(deleteForum(forumId)); },\n    createForum: (forumObj) => { dispatch(createForum(forumObj)); },\n  }; }\n)(Dashboard);\n","import React from 'react';\n\n\n\nclass StyleButton extends React.Component {\n  constructor() {\n    super();\n    this.onToggle = (e) => {\n      e.preventDefault();\n      this.props.onToggle(this.props.style);\n    };\n  }\n\n  render() {\n\n    return (\n      <div  onMouseDown={this.onToggle}>\n        {this.props.label}\n      </div>\n    );\n  }\n}\n\n/* StyleButton.propTypes = {\n  onToggle: React.PropTypes.func.isRequired,\n  active: React.PropTypes.any.isRequired,\n  label: React.PropTypes.string.isRequired,\n  style: React.PropTypes.string.isRequired,\n}; */\n\nexport default StyleButton;\n","import React, { Component } from 'react';\nimport {\n  Editor,\n  EditorState,\n  ContentState,\n  RichUtils,\n  convertToRaw,\n  convertFromRaw,\n} from 'draft-js';\n\n\n\nimport { Button } from 'react-bootstrap';\nimport BlockStyleControls from './BlockStyleControls';\nimport InlineStyleControls from './InlineStyleControls';\n\nclass RichEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n    };\n\n    this.focus = () => this.refs.editor.focus();\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n    this.onTab = this.onTab.bind(this);\n    this.toggleBlockType = this.toggleBlockType.bind(this);\n    this.toggleInlineStyle = this.toggleInlineStyle.bind(this);\n  }\n\n  componentDidMount() {\n    const { value } = this.props;\n    if (value) {\n      const contentState = convertFromRaw(JSON.parse(value));\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({ editorState });\n    }\n  }\n\n  onEditorStateChange(editorState) {\n    const { onChange } = this.props;\n    this.setState({ editorState });\n\n    // trigger on change converting the ContentState to raw object\n    onChange(JSON.stringify(convertToRaw(editorState.getCurrentContent())));\n  }\n\n  handleKeyCommand(command) {\n    const newState = RichUtils.handleKeyCommand(this.state.editorState, command);\n    if (newState) {\n      this.onEditorStateChange(newState);\n      return true;\n    }\n    return false;\n  }\n\n  onTab(event) {\n    const maxDepth = 4;\n    this.onEditorStateChange(RichUtils.onTab(event, this.state.editorState, maxDepth));\n  }\n\n  toggleBlockType(blockType) {\n    this.onEditorStateChange(\n      RichUtils.toggleBlockType(\n        this.state.editorState,\n        blockType\n      )\n    );\n  }\n\n  toggleInlineStyle(inlineStyle) {\n    this.onEditorStateChange(\n      RichUtils.toggleInlineStyle(\n        this.state.editorState,\n        inlineStyle\n      )\n    );\n  }\n\n  customBlockStyles(contentBlock) {\n    const type = contentBlock.getType();\n\n  }\n\n  render() {\n    const {\n      type,\n      onSave,\n      readOnly,\n    } = this.props;\n\n    // styling for inline styles\n    const inlineStyleMap = {\n      'CODE': {\n        color: '#e74c3c',\n        backgroundColor: '#f9f9f9',\n        border: '1px solid #e8e8e8',\n        fontFamily: 'monospace',\n        padding: '2px 5px',\n        margin: '0px 5px',\n      },\n    };\n\n    let saveButtonLabel = '';\n    if (type === 'newOpinion') saveButtonLabel = 'Comment';\n    if (type === 'newDiscussion') saveButtonLabel = 'Post Photo';\n\n    let placeholder = '';\n    if (type === 'newOpinion') placeholder = 'Your comment...';\n    if (type === 'newDiscussion') placeholder = 'Discussion summary...';\n\n    return (\n      <div >\n        {/* { !readOnly && <div >\n          <InlineStyleControls\n            type={type}\n            editorState={this.state.editorState}\n            onToggle={this.toggleInlineStyle}\n          />\n          <BlockStyleControls\n            type={type}\n            editorState={this.state.editorState}\n            onToggle={this.toggleBlockType}\n          />\n        </div> } */}\n\n        <div\n\n          onClick={this.focus} className=\"mb-3\"\n        >\n          <Editor\n            //customStyleMap={inlineStyleMap}\n            blockStyleFn={this.customBlockStyles}\n            readOnly={readOnly}\n            editorState={this.state.editorState}\n            onChange={this.onEditorStateChange}\n            placeholder={placeholder}\n            handleKeyCommand={this.handleKeyCommand}\n            onTab={this.onTab}\n            ref='editor'\n          />\n        </div>\n\n        {!readOnly && <Button style={{ alignSelf: 'center' }} onClick={onSave}>\n          {saveButtonLabel}\n        </Button>}\n      </div>\n    );\n  }\n}\n\nRichEditor.defaultProps = {\n  readOnly: false,\n  value: null,\n  type: 'newDiscussion',\n  onChange: () => { },\n  onSave: () => { },\n};\n\n/* RichEditor.propTypes = {\n  readOnly: React.PropTypes.bool,\n  value: React.PropTypes.any,\n  //type: React.PropTypes.oneOf(['newDiscussion', 'newOpinion']),\n  onChange: React.PropTypes.func,\n  onSave: React.PropTypes.func,\n}; */\n\nexport default RichEditor;\n","import React, { Component } from 'react';\n\n\n\nimport Button from '../../Components/Button';\nimport StyleButton from './StyleButton';\n\nclass BlockStyleControls extends Component {\n  render() {\n    const {\n      onToggle,\n      editorState,\n      type,\n    } = this.props;\n\n    const blockTypes = [\n      // {label: 'H1', style: 'header-one'},\n      // {label: 'H2', style: 'header-two'},\n      {label: 'H3', style: 'header-three'},\n      {label: 'H4', style: 'header-four'},\n      {label: 'H5', style: 'header-five'},\n      // {label: 'H6', style: 'header-six'},\n      {label: 'Blockquote', style: 'blockquote'},\n      // {label: 'UL', style: 'unordered-list-item'},\n      // {label: 'OL', style: 'ordered-list-item'},\n      {label: 'Code Block', style: 'code-block'},\n    ];\n\n    const selection = editorState.getSelection();\n    const blockType = editorState\n      .getCurrentContent()\n      .getBlockForKey(selection.getStartKey())\n      .getType();\n\n    return (\n      <div >\n        { blockTypes.map((eachType) =>\n          <StyleButton\n            key={eachType.label}\n            onToggle={onToggle}\n            active={eachType.style === blockType}\n            label={eachType.label}\n            style={eachType.style}\n          />\n        ) }\n      </div>\n    );\n  }\n}\n\n/* BlockStyleControls.propTypes = {\n  onToggle: React.PropTypes.func.isRequired,\n  editorState: React.PropTypes.any.isRequired,\n  //type: React.PropTypes.oneOf(['newDiscussion', 'newOpinion']),\n}; */\n\nexport default BlockStyleControls;\n","import React, { Component } from 'react';\n\n\n\nimport Button from '../../Components/Button';\nimport StyleButton from './StyleButton';\n\nclass InlineStyleControls extends Component {\n  render() {\n    const {\n      onToggle,\n      editorState,\n    } = this.props;\n\n    const inlineStyles = [\n      {label: 'Bold', style: 'BOLD'},\n      {label: 'Italic', style: 'ITALIC'},\n      // {label: 'Underline', style: 'UNDERLINE'},\n      {label: 'Monospace', style: 'CODE'},\n    ];\n\n    const currentStyle = editorState.getCurrentInlineStyle();\n\n    return (\n      <div >\n        { inlineStyles.map((eachType) =>\n          <StyleButton\n            key={eachType.label}\n            onToggle={onToggle}\n            active={currentStyle.has(eachType.style)}\n            label={eachType.label}\n            style={eachType.style}\n          />\n        ) }\n      </div>\n    );\n  }\n}\n\n/* InlineStyleControls.propTypes = {\n  onToggle: React.PropTypes.func.isRequired,\n  editorState: React.PropTypes.any.isRequired,\n  //type: React.PropTypes.oneOf(['newDiscussion', 'newOpinion']),\n}; */\n\nexport default InlineStyleControls;\n","import React, { Component } from 'react';\n\n\n\nimport Button from '../../../Components/Button';\n\nclass PinButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: false };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value } = nextProps;\n    this.setState({ value });\n  }\n\n  updateValue(value) {\n    this.props.onChange(value);\n    this.setState({ value });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div >\n        <div >Is it a featured discussion?</div>\n\n        <div >\n          <Button\n            alwaysActive={value ? true : false}\n            onClick={() => { this.updateValue(true); }}\n          >\n            Yes\n          </Button>\n\n          <Button\n            alwaysActive={!value ? true : false}\n            onClick={() => { this.updateValue(false); }}\n          >\n            No\n          </Button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nPinButton.defaultProps = {\n  onChange: (val) => {},\n  value: false,\n};\n\n/* PinButton.propTypes = {\n  onChange: React.PropTypes.func,\n  value: React.PropTypes.bool,\n}; */\n\nexport default PinButton;\n","import React, { Component } from 'react';\n\n\n\nimport Button from '../../Components/Button';\n\nclass Tag extends Component {\n  render() {\n    const {\n      name,\n      withRemove,\n      removeAction,\n    } = this.props;\n\n    return (\n      <div >\n        {name}\n        { withRemove &&\n          <Button\n            onClick={removeAction}\n\n          >\n            <i ></i>\n          </Button>\n        }\n      </div>\n    );\n  }\n}\n\nTag.defaultProps = {\n  name: '',\n  withRemove: false,\n  removeAction: () => {},\n};\n\n/* Tag.propTypes = {\n  name: React.PropTypes.string.isRequired,\n  withRemove: React.PropTypes.bool,\n  removeAction: React.PropTypes.func,\n}; */\n\nexport default Tag;\n","import React, { Component } from 'react';\n\n\n\n\nimport Button from '../../../Components/Button';\nimport Tag from '../../../Components/Tag';\n\nclass TagsInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMsg: null,\n      tags: [],\n      tagName: '',\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value } = nextProps;\n    this.setState({ tags: value, errorMsg: null });\n  }\n\n  validateTag(tagName) {\n    const regex = /^[a-z0-9.\\-_$@*!]{4,20}$/;\n    return regex.test(tagName);\n  }\n\n  sameTag(tagName) {\n    const { tags } = this.state;\n    let matched = false;\n    tags.map((tag) => {\n      if (tag === tagName) matched = true;\n      return null\n    });\n    return matched;\n  }\n\n  addTag() {\n    const {\n      tagName,\n      tags,\n      errorMsg,\n    } = this.state;\n\n    if (this.validateTag(tagName)) {\n      if (!this.sameTag(tagName)) {\n        const newTags = tags.concat(tagName);\n        this.setState({\n          tags: newTags,\n          errorMsg: null,\n          tagName: '',\n        });\n        this.props.onChange(newTags);\n      } else {\n        this.setState({ errorMsg: 'Same tag!!!' });\n      }\n    } else {\n      this.setState({ errorMsg: 'Tags can only contain small letters and numbers. No space or special characters please. Min 4 and max 20 chars.' });\n    }\n  }\n\n  removeTag(position) {\n    const { tags } = this.state;\n    const newTags = [...tags.slice(0, position), ...tags.slice(position + 1, tags.length)];\n    this.setState({ tags: newTags });\n    this.props.onChange(newTags);\n  }\n\n  renderTags() {\n    const { tags } = this.state;\n\n    return tags.map((tag, i) => {\n      return (\n        <Tag\n          name={tag}\n          key={tag}\n          withRemove\n          removeAction={() => { this.removeTag(i); }}\n        />\n      );\n    });\n  }\n\n  renderInput() {\n    const {\n      tagName,\n      tags,\n    } = this.state;\n    const { maxTagCount } = this.props;\n\n    if ( tags.length < maxTagCount ) {\n      return (\n        <div >\n          <input\n\n            placeholder={'tag name...'}\n            value={tagName}\n            onChange={(e) => { this.setState({ tagName: e.target.value }); }}\n          />\n          <Button\n\n            onClick={() => { this.addTag(); }}\n          >\n            <i ></i>\n          </Button>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      errorMsg,\n      tagName,\n      tags,\n    } = this.state;\n\n    const { maxTagCount } = this.props;\n\n    return (\n      <div >\n        <div >\n          <div >Tags :</div>\n          { this.renderTags() }\n          { this.renderInput() }\n        </div>\n        { errorMsg && <div >{errorMsg}</div> }\n      </div>\n    );\n  }\n}\n\nTagsInput.defaultProps = {\n  value: [],\n  maxTagCount: 3,\n  onChange: (tags) => {},\n};\n\n/* TagsInput.propTypes = {\n  value: React.PropTypes.array,\n  maxTagCount: React.PropTypes.number,\n  onChange: React.PropTypes.func,\n}; */\n\nexport default TagsInput;\n","import { browserHistory } from 'react-router';\nimport {\n  POSTING_DISCUSSION_START,\n  POSTING_DISCUSSION_END,\n  POSTING_DISCUSSION_SUCCESS,\n  POSTING_DISCUSSION_FAILURE,\n\n  UPDATE_DISCUSSION_TITLE,\n  UPDATE_DISCUSSION_CONTENT,\n  UPDATE_DISCUSSION_PIN_STATUS,\n  UPDATE_DISCUSSION_TAGS,\n  UPDATE_DISCUSSION_TILE,\n  CLEAR_SUCCESS_MESSAGE,\n} from './constants';\nimport { postDiscussionApi } from './api';\n\n/**\n * post a new discussion\n * @param  {ObjectId} userId\n * @param  {ObjectId} forumId\n * @param  {String} currentForum\n * @return {action}\n */\nexport const postDiscussion = (userId, forumId, currentForum, cb) => {\n  return (dispatch, getState) => {\n    dispatch({ type: POSTING_DISCUSSION_START });\n\n    // validate discussion inputs\n    // discussion values are in redux state\n    const {\n      title,\n      tile,\n      content,\n      tags,\n      pinned,\n    } = getState().newDiscussion;\n\n    let validated = true;\n\n    if (!userId || !forumId) {\n      validated = false;\n      return dispatch({\n        type: POSTING_DISCUSSION_FAILURE,\n        payload: 'Something is wrong with user/forum.',\n      });\n    }\n\n    if (title === null || title.length < 10) {\n      validated = false;\n      return dispatch({\n        type: POSTING_DISCUSSION_FAILURE,\n        payload: 'Title should be at least 10 characters.',\n      });\n    }\n\n    if (content === null || content.length === 0) {\n      validated = false;\n      return dispatch({\n        type: POSTING_DISCUSSION_FAILURE,\n        payload: 'Please write some content before posting.',\n      });\n    }\n\n    if (tile === undefined) {\n      validated = false;\n      return dispatch({\n        type: POSTING_DISCUSSION_FAILURE,\n        payload: 'Please add a tile .',\n      });\n    }\n\n    if (tags === null || tags.length === 0) {\n      validated = false;\n      return dispatch({\n        type: POSTING_DISCUSSION_FAILURE,\n        payload: 'Please provide some tags.',\n      });\n    }\n\n    // make api call if post is validated\n    if (validated) {\n      postDiscussionApi({\n        userId,\n        forumId,\n        title,\n        content,\n        tags,\n        pinned,\n        tile\n      }).then(\n        (data) => {\n          if (data.data.postCreated === true) {\n            dispatch({ type: POSTING_DISCUSSION_SUCCESS });\n            setTimeout(() => { dispatch({ type: CLEAR_SUCCESS_MESSAGE }); }, 2000);\n            cb()\n            // issue a redirect to the newly reacted discussion\n            //browserHistory.push(`/${currentForum}/discussion/${data.data.discussion_slug}`);\n          } else {\n            dispatch({\n              type: POSTING_DISCUSSION_FAILURE,\n              payload: 'Something is wrong at our server end. Please try again later',\n            });\n          }\n        },\n        (error) => {\n          dispatch({\n            type: POSTING_DISCUSSION_FAILURE,\n            payload: error,\n          });\n        }\n      );\n    }\n  };\n};\n\n/**\n * update the discussion title in redux state (controlled input)\n * @param  {String} value\n * @return {action}\n */\nexport const updateDiscussionTitle = (value) => { \n  \n  return {\n    type: UPDATE_DISCUSSION_TITLE,\n    payload: value,\n  };\n};\n\n/**\n * update discussion content in redux state (controlled input)\n * @param  {Object} value\n * @return {action}\n */\nexport const updateDiscussionContent = (value) => {\n  return {\n    type: UPDATE_DISCUSSION_CONTENT,\n    payload: value,\n  };\n};\n\n/**\n * update discussion tile in redux state (not controlled input)\n * @param  {Object} tile\n * @return {action}\n */\nexport const updateDiscussionTile = (tile) => {  \n \n  return {\n    type: UPDATE_DISCUSSION_TILE,\n    payload: tile,\n  };\n};\n\n/**\n * update discussion pinned status in redux state (controlled input)\n * @param  {Boolean} value\n * @return {action}\n */\nexport const updateDiscussionPinStatus = (value) => {\n  return {\n    type: UPDATE_DISCUSSION_PIN_STATUS,\n    payload: value,\n  };\n};\n\n/**\n * update discussion tags in redux state (controlled input)\n * @param  {Array} value\n * @return {action}\n */\nexport const updateDiscussionTags = (value) => {\n  return {\n    type: UPDATE_DISCUSSION_TAGS,\n    payload: value,\n  };\n};\n","import axios from 'axios';\n\nexport const postDiscussionApi = (discussion) => {\n  const formData = new FormData();\n  for (let attr in discussion) {\n    formData.append(attr, discussion[attr]);\n\n  }\n\n\n  return (axios.post('/api/discussion/newDiscussion', formData, {\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }));\n};\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\n\nimport RichEditor from '../../Components/RichEditor';\nimport PinButton from '../../Components/NewDiscussion/PinButton';\nimport TagsInput from '../../Components/NewDiscussion/TagsInput';\n\nimport {\n  postDiscussion,\n  updateDiscussionTitle,\n  updateDiscussionTile,\n  updateDiscussionContent,\n  updateDiscussionPinStatus,\n  updateDiscussionTags,\n} from './actions';\n\n\n\n\nclass NewDiscussion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      forumId: null,\n      userId: null,\n      fatalError: null,\n      tileImage: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user,\n      currentForum,\n      forums,\n      updateDiscussionTags\n    } = this.props;\n    updateDiscussionTags(['aarp'])\n    this.setUserAndForumID(user, forums, currentForum);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      user,\n      currentForum,\n      forums,\n    } = nextProps;\n\n    this.setUserAndForumID(user, forums, currentForum);\n  }\n\n  setUserAndForumID(user, forums, currentForum) {\n    const forumId = _.find(forums, { forum_slug: currentForum });\n    if (forumId) {\n      const currentForumId = forumId._id;\n      this.setState({\n        forumId: currentForumId,\n        userId: user._id,\n      });\n    } else {\n      this.setState({\n        fatalError: 'Invalid forum buddy, go for the right one!',\n      });\n    }\n  }\n\n\n  renderEditor() {\n    const {\n      authenticated,\n      role,\n    } = this.props.user;\n\n    const {\n      updateDiscussionTitle,\n      updateDiscussionTile,\n      updateDiscussionContent,\n      updateDiscussionPinStatus,\n      updateDiscussionTags,\n      postDiscussion,\n      currentForum,\n      successCallback\n    } = this.props;\n\n    const {\n      title,\n      content,\n      tags,\n      pinned,\n      tile\n\n    } = this.props.newDiscussion;\n\n    const {\n      forumId,\n      userId,\n    } = this.state;\n\n    // only show the editor when user is authenticated\n    if (authenticated) {\n      return (\n        <section className=\"d-flex new-discussion\">\n          <div className=\"new-discussion__dropzone-container d-flex justify-content-center align-items-center\">\n            <Dropzone accept=\"image/jpeg, image/png\" onDrop={acceptedFiles => updateDiscussionTile(acceptedFiles[0])}>\n              {({ getRootProps, getInputProps }) => (\n                <section>\n                  <div {...getRootProps()} >\n                    <input name=\"tile\" {...getInputProps()} />\n                    <p>Drag 'n' drop some files here, or click to select files</p>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n          </div>\n          <Form className=\"new-discussion__form\" onSubmit={(e) => { e.preventDefault() }}>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n              <Form.Label><strong>Discussion Title</strong></Form.Label>\n              <Form.Control key={'title'}\n                type=\"text\"\n                value={title}\n                onChange={(event) => { updateDiscussionTitle(event.target.value); }} />\n            </Form.Group>\n\n\n\n            {(role === 'admin') && <Form.Group><PinButton\n              key={'pinned'}\n              value={pinned}\n              onChange={(value) => { updateDiscussionPinStatus(value); }}\n            />\n            </Form.Group>}\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Camera</Form.Label>\n              <Form.Control as=\"select\">\n                <option>Sony A6100</option>\n                <option>Olympus OM-D E-M5 Mark III</option>\n                <option>Canon EOS Rebel SL3 / EOS 250D</option>\n                <option>Fujifilm X100V</option>\n                <option>Sony ZV-1</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group >\n              <Form.Check type=\"checkbox\" label=\"I am the owner of this photo. AARP may use this photo without permission or attribution. (Required)\" />\n            </Form.Group>\n            <Form.Group>\n\n              <Form.Label><strong>Description</strong></Form.Label>\n              <Form.Text className=\"mb-2\">\n                Describe how your sharp photo connects to the Staying Sharp Pillar Ongoing Exercise?\n  </Form.Text>\n              <RichEditor\n                key={'content'}\n                type='newDiscussion'\n                value={content}\n                onChange={(value) => { updateDiscussionContent(value); }}\n                onSave={() => { postDiscussion(userId, forumId, currentForum, successCallback); }}\n              />\n            </Form.Group>\n          </Form>\n        </section>\n      )/* [\n        <textarea\n          \n        />,\n        ,\n        <TagsInput\n          key={'tags'}\n          value={tags}\n          onChange={(tags) => { updateDiscussionTags(tags); }}\n        />,\n        <RichEditor\n          key={'content'}\n          type='newDiscussion'\n          value={content}\n          onChange={(value) => { updateDiscussionContent(value); }}\n          onSave={() => { postDiscussion(userId, forumId, currentForum); }}\n        />,\n        <div key={'tile'} >\n          <div >Tile Image: </div>\n          <input\n\n            type={'file'}\n            accept=\"image/jpeg\"\n            name=\"tile\"\n            onChange={(e) => { updateDiscussionTile(e.target.files[0]); }}\n          />\n        </div>\n      ]; */\n    }\n\n    return (\n      <div >\n        Please sign in before posting a new discussion.\n      </div>\n    );\n  }\n\n  render() {\n    const { fatalError } = this.state;\n\n    if (fatalError) { return (<div >{fatalError}</div>); }\n\n    const { currentForum } = this.props;\n    const {\n      errorMsg,\n      postingSuccess,\n      postingDiscussion,\n    } = this.props.newDiscussion;\n\n    return (\n      <div >\n\n        <div >{errorMsg}</div>\n        {postingSuccess && <div >Your discussion is created :-)</div>}\n        {this.renderEditor()}\n        {postingDiscussion && <div >Posting discussion...</div>}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      user: state.user,\n      forums: state.app.forums,\n      currentForum: state.app.currentForum,\n      newDiscussion: state.newDiscussion\n\n    };\n  },\n  (dispatch) => {\n    return {\n      postDiscussion: (userId, forumId, currentForum, cb) => { dispatch(postDiscussion(userId, forumId, currentForum, cb)); },\n      updateDiscussionTitle: (value) => {\n        dispatch(updateDiscussionTitle(value));\n      },\n      updateDiscussionTile: (value) => {\n        dispatch(updateDiscussionTile(value));\n      },\n      updateDiscussionContent: (value) => { dispatch(updateDiscussionContent(value)); },\n      updateDiscussionPinStatus: (value) => { dispatch(updateDiscussionPinStatus(value)); },\n      updateDiscussionTags: (value) => { dispatch(updateDiscussionTags(value)); },\n    };\n  }\n)(NewDiscussion);\n","import axios from 'axios';\n\n/**\n * feed apis\n */\nexport const fetchDiscussions = (forum_id, sortingMethod) => {\n  return axios.get(`/api/forum/${forum_id}/discussions?sorting_method=${sortingMethod}`);\n};\n\nexport const fetchPinnedDiscussions = (forum_id) => {\n  return axios.get(`/api/forum/${forum_id}/pinned_discussions`);\n};\n","import axios from 'axios';\n\n/**\n * single discussion apis\n */\nexport const fetchSingleDiscussion = (discussion_slug) => {\n  return axios.get(`/api/discussion/${discussion_slug}`);\n};\n\nexport const toggleFavoriteApi = (discussion_id) => {\n  return axios.put(`/api/discussion/toggleFavorite/${discussion_id}`);\n};\n\nexport const postOpinionApi = (opinion) => {\n  return axios.post('/api/opinion/newOpinion', opinion);\n};\n\nexport const deletePostApi = (discussionSlug) => {\n  return axios.delete(`/api/discussion/deleteDiscussion/${discussionSlug}`);\n};\n\nexport const deleteOpinionApi = (opinionId) => {\n  return axios.delete(`/api/opinion/deleteOpinion/${opinionId}`);\n};\n","import {\n  FETCHING_SINGLE_DISC_START,  \n  FETCHING_SINGLE_DISC_SUCCESS,\n  FETCHING_SINGLE_DISC_FAILURE,\n\n  TOGGLE_FAVORITE_START,\n  TOGGLE_FAVORITE_SUCCESS,\n  TOGGLE_FAVORITE_FAILURE,\n\n  UPDATE_OPINION_CONTENT,\n\n  POSTING_OPINION_START,\n  POSTING_OPINION_SUCCESS,\n  POSTING_OPINION_FAILURE,\n\n  DELETE_DISC_START,\n  DELETE_DISC_SUCCESS,\n  DELETE_DISC_REDIRECT,\n  DELETE_DISC_FAILURE,\n\n  DELETE_OPINION_START,\n  DELETE_OPINION_SUCCESS,\n  DELETE_OPINION_FAILURE,\n} from './constants';\n\nimport {\n  fetchSingleDiscussion,  \n  toggleFavoriteApi,\n  postOpinionApi,\n  deletePostApi,\n  deleteOpinionApi,\n} from './api';\n\n/**\n * get the discussion from server\n * @param  {String} discussionSlug\n * @return {action}\n */\nexport const getDiscussion = (discussionSlug) => {\n  return (dispatch, getState) => {\n    dispatch({ type: FETCHING_SINGLE_DISC_START });\n    fetchSingleDiscussion(discussionSlug).then(\n      data => {\n        if (data.data) dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\n        else dispatch({ type: FETCHING_SINGLE_DISC_FAILURE });\n      },\n      error => dispatch({ type: FETCHING_SINGLE_DISC_FAILURE })\n    );\n  };\n};\n\n/**\n * toggle favorite status of the discussion\n * @param  {ObjectId} discussionId\n * @return {action}\n */\nexport const toggleFavorite = (discussionId) => {\n  return (dispatch, getState) => {\n    dispatch({ type: TOGGLE_FAVORITE_START });\n\n    toggleFavoriteApi(discussionId).then(\n      data => {\n        if (data.data._id) {\n          dispatch({ type: TOGGLE_FAVORITE_SUCCESS });\n          dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\n        }\n        else dispatch({ type: TOGGLE_FAVORITE_FAILURE });\n      },\n      error => dispatch({ type: TOGGLE_FAVORITE_FAILURE })\n    );\n  };\n};\n\n/**\n * update opinion content in redux state (controlled input)\n * @param  {Object} value\n * @return {action}\n */\nexport const updateOpinionContent = (value) => {\n  return {\n    type: UPDATE_OPINION_CONTENT,\n    payload: value,\n  };\n};\n\n/**\n * post an opinion\n * @param  {Object} opinion\n * @param  {String} discussionSlug\n * @return {action}\n */\nexport const postOpinion = (opinion, discussionSlug) => {\n  return (dispatch, getState) => {\n    // dispatch to show the posting message\n    dispatch({ type: POSTING_OPINION_START });\n\n    // validate the opinion\n    if (!opinion.content || opinion.content.length < 20) {\n      dispatch({ type: POSTING_OPINION_FAILURE, payload: 'Please provide a bit more info in your opinion....at least 20 characters.' });\n    } else {\n      // call the api to post the opinion\n      postOpinionApi(opinion).then(\n        data => {\n          if (data.data._id) {\n            // fetch the discussion to refresh the opinion list\n            fetchSingleDiscussion(discussionSlug).then(\n              data => {\n                dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\n                dispatch({ type: POSTING_OPINION_SUCCESS });\n              },\n              error => dispatch({ type: FETCHING_SINGLE_DISC_FAILURE })\n            );\n          }\n          else dispatch({ type: POSTING_OPINION_FAILURE });\n        },\n        error => dispatch({ type: POSTING_OPINION_FAILURE })\n      );\n    }\n  };\n};\n\n/**\n * delete the discussion post\n * @param  {String} discussionSlug\n * @return {action}\n */\nexport const deletePost = (discussionSlug) => {\n  return (dispatch, getState) => {\n    dispatch({ type: DELETE_DISC_START });\n    deletePostApi(discussionSlug).then(\n      data => {\n        if (data.data.deleted) { dispatch({ type: DELETE_DISC_SUCCESS }); }\n        else { dispatch({ type: DELETE_DISC_FAILURE }); }\n      },\n      error => dispatch({ type: DELETE_DISC_FAILURE })\n    );\n  };\n};\n\n/**\n * after a successfull deletion of a discussion\n * the user should be redirected to the home page\n * @return {action}\n */\nexport const deletedDiscussionRedirect = () => {\n  return (dispatch, getState) => {\n    dispatch({ type: DELETE_DISC_REDIRECT });\n  };\n};\n\n/**\n * delete an opinion\n * @param  {ObjectId} opinionId\n * @param  {String} discussionSlug\n * @return {action}\n */\nexport const deleteOpinion = (opinionId, discussionSlug) => {\n  return (dispatch, getState) => {\n    // show the loading message\n    dispatch({ type: DELETE_OPINION_START, payload: opinionId });\n\n    // call the api\n    deleteOpinionApi(opinionId).then(\n      data => {\n        if (data.data.deleted) {\n\n          // fetch the discussion again to refresh the opinions\n          fetchSingleDiscussion(discussionSlug).then(\n            data => {\n              dispatch({ type: DELETE_OPINION_SUCCESS });\n              dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\n            },\n            error => dispatch({ type: FETCHING_SINGLE_DISC_FAILURE })\n          );\n\n        }\n        else { dispatch({ type: DELETE_OPINION_FAILURE }); }\n      },\n      error => dispatch({ type: DELETE_OPINION_FAILURE })\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport Button from '../../../Components/Button';\nimport RichEditor from '../../../Components/RichEditor';\nimport thumbsUp from './../../../App/img/thumbsup-icon.svg';\n\nclass Discussion extends Component {\n  render() {\n    const {\n      id,\n\n      discTitle,      \n      discContent,\n      favoriteCount,\n      favoriteAction,\n      userFavorited,\n      toggleingFavorite,\n      allowDelete,\n      deletingDiscussion,\n      deleteAction\n\n    } = this.props;\n\n\n\n\n\n\n    return (\n      <section className=\"single-discussion\">\n\n\n        <div >{discTitle}</div>\n\n\n\n\n\n\n        <div className=\"mt-3 mb-3 d-flex single-discussion__tools align-items-center justify-content-between\">\n          <div ><button onClick={() => { !toggleingFavorite && favoriteAction(id); }} className={userFavorited ? 'active misc-button p-2' : 'misc-button p-2'} ><img src={thumbsUp} /></button> <span className=\"ml-2\">{favoriteCount} Kudos</span></div>\n          {allowDelete && <Button noUppercase onClick={() => { deleteAction(); }}>\n            <i ></i>\n            <span>Delete</span>\n          </Button>}\n        </div>\n\n\n\n\n\n        <RichEditor\n          readOnly={true}\n          value={discContent}\n        />\n\n\n        {deletingDiscussion && <div>\n          Deleting Discussion...\n        </div>}\n      </section>\n    );\n  }\n}\n\nDiscussion.defaultProps = {\n  id: 0,\n  userAvatar: null,\n  userName: 'User name',\n  userGitHandler: 'github',\n  discTitle: 'Default Discussion Title',\n  discDate: 'a day ago',\n  discContent: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n  tags: ['react', 'redux', 'webkit'],\n  favoriteCount: 1,\n  favoriteAction: () => { },\n  userFavorited: false,\n  toggleingFavorite: false,\n  allowDelete: false,\n  deletingDiscussion: false,\n  deleteAction: () => { },\n};\n\n/* Discussion.propTypes = {\n  id: React.PropTypes.any,\n  userAvatar: React.PropTypes.string,\n  userName: React.PropTypes.string,\n  userGitHandler: React.PropTypes.string,\n  discTitle: React.PropTypes.string,\n  discDate: React.PropTypes.any,\n  discContent: React.PropTypes.any,\n  tags: React.PropTypes.array,\n  favoriteCount: React.PropTypes.number,\n  favoriteAction: React.PropTypes.func,\n  userFavorited: React.PropTypes.bool,\n  toggleingFavorite: React.PropTypes.bool,\n  allowDelete: React.PropTypes.bool,\n  deletingDiscussion: React.PropTypes.bool,\n  deleteAction: React.PropTypes.func,\n}; */\n\nexport default Discussion;\n","import React, { Component } from 'react';\n\n\nimport RichEditor from '../../../Components/RichEditor';\n\nclass ReplyBox extends Component {\n  render() {\n    const {\n      posting,\n      onSubmit,\n      onChange,\n    } = this.props;\n\n    if (posting) return <div >Posting your opinion...</div>;\n\n    return (\n      <RichEditor\n        type=\"newOpinion\"\n        onSave={onSubmit}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nReplyBox.defaultProps = {\n  posting: false,\n  onSubmit: () => { },\n  onChange: (value) => { },\n};\n\n/* ReplyBox.propTypes = {\n  posting: React.PropTypes.bool,\n  onSubmit: React.PropTypes.func,\n  onChange: React.PropTypes.func,\n}; */\n\nexport default ReplyBox;\n","import React, { Component } from 'react';\n\nimport moment from 'moment';\nimport { Image } from 'react-bootstrap';\n\nimport Button from '../../../Components/Button';\nimport RichEditor from '../../../Components/RichEditor';\n\nclass Opinion extends Component {\n  render() {\n    const {\n      opinionId,\n      userAvatar,\n\n      opDate,\n      opContent,\n      userId,\n      currentUserId,\n      currentUserRole,\n      deleteAction,\n      deletingOpinion,\n    } = this.props;\n\n    \n\n    const allowDelete = (userId === currentUserId) || (currentUserRole === 'admin');\n\n    return (\n      <div className=\"opinion d-flex\">\n        <div className=\"opinion__image-container\">\n          <Image src={userAvatar} fluid roundedCircle/>\n\n\n          {allowDelete && <Button noUppercase onClick={() => { deleteAction(opinionId); }}>\n            <i ></i>\n            <span>Delete</span>\n          </Button>}\n          {/* <Button noUppercase>Quote</Button> */}\n        </div>\n\n        <div className=\"opinion__comment-container\">\n          <RichEditor\n            readOnly\n            value={opContent}\n          />\n        </div>\n\n        {(deletingOpinion === opinionId) && <div >Deleting Opinion ...</div>}\n      </div>\n    );\n  }\n}\n\nOpinion.defaultProps = {\n  opinionId: '12345',\n  userAvatar: null,\n  userName: 'User name',\n  userGitHandler: 'github',\n  opDate: 'a day ago',\n  opContent: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n  userId: '12345',\n  currentUserId: '12345',\n  currentUserRole: 'user',\n  deleteAction: () => { },\n  deletingOpinion: null,\n};\n\n/* Opinion.propTypes = {\n  opinionId: React.PropTypes.string,\n  userAvatar: React.PropTypes.string,\n  userName: React.PropTypes.string,\n  userGitHandler: React.PropTypes.string,\n  opDate: React.PropTypes.any,\n  opContent: React.PropTypes.string,\n  userId: React.PropTypes.string,\n  currentUserId: React.PropTypes.string,\n  currentUserRole: React.PropTypes.string,\n  deleteAction: React.PropTypes.func,\n  deletingOpinion: React.PropTypes.any,\n}; */\n\nexport default Opinion;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\n\nimport {\n  toggleFavorite,\n  updateOpinionContent,\n  postOpinion,\n  deletePost,\n  deletedDiscussionRedirect,\n  deleteOpinion,\n  getDiscussion\n} from './actions';\n\nimport Discussion from '../../Components/SingleDiscussion/Discussion';\nimport ReplyBox from '../../Components/SingleDiscussion/ReplyBox';\nimport Opinion from '../../Components/SingleDiscussion/Opinion';\n\n\nclass SingleDiscussion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { opinionContent: '' };\n  }\n\n  componentDidMount() {\n    const {\n\n      discussionSlug\n    } = this.props;\n\n    this.props.getDiscussion(discussionSlug);\n  }\n\n\n  componentDidUpdate() {\n    const {\n      deletedDiscussion,\n      deletedDiscussionRedirect,\n    } = this.props;\n\n    /* const { forum } = this.props.params;\n\n    // check if the discussion is deleted and redirect the user\n    if (deletedDiscussion) {\n      browserHistory.push(`/${forum}`);\n      setTimeout(() => { deletedDiscussionRedirect(); }, 100);\n    } */\n  }\n\n  componentWillUnmount() {\n    // remove any existing opinion texts\n    this.props.updateOpinionContent(null);\n  }\n\n  userFavoritedDiscussion(userId, favorites) {\n    let favorited = false;\n    for (let i = 0; i < favorites.length; i++) {\n      if (favorites[i] === userId) favorited = true;\n    }\n    return favorited;\n  }\n\n  handleReplySubmit() {\n\n    const {      \n      postOpinion,\n      discussion,\n      opinionContent,\n      userId,\n    } = this.props;\n\n    const discussion_slug = this.props.discussion.discussion_slug;    \n    const forumId = this.props.discussion.forum._id;\n\n    postOpinion(\n      {\n        forum_id: forumId,\n        discussion_id: discussion._id,\n        user_id: userId,\n        content: opinionContent,\n      },\n      discussion_slug\n    );\n  }\n\n  deleteDiscussion() {\n    const { discussion } = this.props.params;\n    const { deletePost } = this.props;\n    deletePost(discussion);\n  }\n\n  deleteOpinion(opinionId) {\n    const { discussion } = this.props.params;\n    const { deleteOpinion } = this.props;\n    deleteOpinion(opinionId, discussion);\n  }\n\n  render() {\n    const {\n      discussion,\n      toggleFavorite,\n      toggleingFavorite,\n      updateOpinionContent,\n      postingOpinion,\n      opinionError,\n      deletingOpinion,\n      deletingDiscussion\n\n    } = this.props;\n    if (discussion) {\n      const {\n        _id,\n        content,\n        date,\n        favorites,\n        title,\n        tags,\n        opinions,\n      } = discussion;\n\n\n      const {\n        avatarUrl,\n        name,\n        username,\n      } = discussion.user;\n\n      // check if logged in user is owner of the discussion\n      let allowDelete = false;\n      if (\n        (discussion.user._id === this.props.userId) ||\n        this.props.userRole === 'admin'\n      ) allowDelete = true;\n\n      // check if user favorated the discussion\n      const userFavorited = this.userFavoritedDiscussion(this.props.userId, favorites);\n\n      return (\n        <div >\n\n          <Discussion\n            id={_id}\n            userAvatar={avatarUrl}\n            userName={name || username}\n            userGitHandler={username}\n            discTitle={title}\n            discDate={date}\n            discContent={content}\n            tags={tags}\n            favoriteCount={favorites.length}\n            favoriteAction={toggleFavorite}\n            userFavorited={userFavorited}\n            toggleingFavorite={toggleingFavorite}\n            allowDelete={allowDelete}\n            deletingDiscussion={deletingDiscussion}\n            deleteAction={this.deleteDiscussion.bind(this)}\n\n          />\n\n          {opinionError && <div >{opinionError}</div>}\n\n\n          <ReplyBox\n            posting={postingOpinion}\n            onSubmit={this.handleReplySubmit.bind(this)}\n            onChange={(content) => { updateOpinionContent(content); }}\n          />\n\n          <hr />\n          {opinions && opinions.length ? <p><strong>{opinions.length} Comments</strong></p> : null}\n          {opinions && opinions.map((opinion) => {\n            return (\n              <Opinion\n                key={opinion._id}\n                opinionId={opinion._id}\n                userAvatar={opinion.user.avatarUrl}\n                userName={opinion.user.name}\n                userGitHandler={opinion.user.username}\n                opDate={opinion.date}\n                opContent={opinion.content}\n                userId={opinion.user_id}\n                currentUserId={this.props.userId}\n                currentUserRole={this.props.userRole}\n                deleteAction={this.deleteOpinion.bind(this)}\n                deletingOpinion={deletingOpinion}\n              />\n            );\n          })}\n        </div>\n      );\n    }\n\n    else return null\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      forums: state.app.forums,\n      userId: state.user._id,\n      userRole: state.user.role,\n      toggleingFavorite: state.discussion.toggleingFavorite,\n      deletingDiscussion: state.discussion.deletingDiscussion,\n      deletedDiscussion: state.discussion.deletedDiscussion,\n      opinionContent: state.discussion.opinionContent,\n      postingOpinion: state.discussion.postingOpinion,\n      opinionError: state.discussion.opinionError,\n      deletingOpinion: state.discussion.deletingOpinion,\n      error: state.discussion.error,\n      discussion: state.discussion.discussion,\n    };\n  },\n  (dispatch) => {\n    return {\n      getDiscussion: (discussionSlug) => { dispatch(getDiscussion(discussionSlug)); },\n      toggleFavorite: (discussionId) => { dispatch(toggleFavorite(discussionId)); },\n      updateOpinionContent: (content) => { dispatch(updateOpinionContent(content)); },\n      postOpinion: (opinion, discussionSlug) => { dispatch(postOpinion(opinion, discussionSlug)); },\n      deletePost: (discussionSlug) => { dispatch(deletePost(discussionSlug)); },\n      deletedDiscussionRedirect: () => { dispatch(deletedDiscussionRedirect()); },\n      deleteOpinion: (opinionId, discussionSlug) => { dispatch(deleteOpinion(opinionId, discussionSlug)); },\n    };\n  }\n)(SingleDiscussion);\n","import React, { useState } from 'react';\nimport { Card, Button, Image, Modal } from 'react-bootstrap';\nimport Moment from 'moment';\nimport SingleDiscussion from '../../../Views/SingleDiscussion';\nimport thumbsUp from './../../../App/img/thumbsup-icon.svg';\n\nfunction DiscussionBox(props) {\n\n  const [lgShow, setLgShow] = useState(false);\n\n  const user = props.discussion.user\n\n  const discussionTitle = props.discussion.title\n  const discussionContent = props.discussion.content\n  const pinnedDiscussion = props.discussion.pinned\n  const time = props.discussion.date\n  const id = props.idKey\n\n  const voteCount = props.discussion.favorites.length\n\n\n  const { discussion, discussionType } = props;\n\n  const postTime = Moment(time);\n  const timeDisplay = postTime.from(Moment());\n\n  return (\n    <Card key={id} className=\"discussion-box mb-3\">\n      <Card.Body>\n        <section className=\"discussion-box__header d-flex mb-3\">\n          <Image src={user.avatarUrl} roundedCircle />\n          <div className=\"d-flex flex-column justify-content-center\">\n            <span>{user.name || user.username} {pinnedDiscussion ? <span className=\"rectangle\">Featured</span> : null}</span>\n            <span className=\"text-muted\">{user.role === 'admin' ? 'MODERATOR' : 'USER'} - {timeDisplay}</span>\n          </div>\n        </section>\n\n        <Image className=\"discussion-box__image\" src={'data:image/jpeg;base64,' + discussion.base64} fluid />\n        <Card.Text>\n          {discussionContent.text}\n        </Card.Text>\n\n        <p>{discussionTitle}</p>\n\n\n        <div className=\"d-flex discussion-box__footer align-items-center justify-content-between\">\n          <div ><button className=\"misc-button p-2\"><img src={thumbsUp} /></button> <span className=\"ml-2\">{voteCount} Kudos</span></div>\n          <Button onClick={() => setLgShow(true)}>Comment</Button>\n        </div>\n      </Card.Body>\n      <Modal\n\n        size=\"xl\"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby=\"example-modal-sizes-title-lg\"\n      >\n\n        <Modal.Body className=\"p-0 d-flex\">\n          <div className=\"w-75 modal-image\" style={{ backgroundImage: 'url(' + 'data:image/jpeg;base64,' + discussion.base64 + ')' }}>\n\n          </div>\n          <div className=\"w-25 p-3\">\n            <section className=\"discussion-box__header d-flex mb-3\">\n\n\n              <Image src={user.avatarUrl} roundedCircle />\n              <div className=\"d-flex flex-column justify-content-center\">\n                <span>{user.name || user.username} </span>\n                <span className=\"text-muted\">{timeDisplay}</span>\n              </div>\n            </section>\n            <SingleDiscussion discussionSlug={discussion.discussion_slug} />\n          </div>\n        </Modal.Body>\n      </Modal>\n\n    </Card>\n\n  );\n}\n\n\nDiscussionBox.defaultProps = {\n  discussionId: 1,\n  voteCount: 20,\n  user: {},\n  userGitHandler: 'github',\n  discussionTitle: 'This is a default post title',\n  time: Moment(),\n  opinionCount: 12,\n  tags: ['react', 'redux', 'nodejs'],\n  link: '',\n  userProfile: false,\n};\n\n/* DiscussionBox.propTypes = {\n  discussionId: React.PropTypes.number,\n  voteCount: React.PropTypes.number,\n  userName: React.PropTypes.string,\n  userGitHandler: React.PropTypes.string,\n  discussionTitle: React.PropTypes.string,\n  time: React.PropTypes.any,\n  opinionCount: React.PropTypes.number,\n  tags: React.PropTypes.array,\n  link: React.PropTypes.string,\n  userProfile: React.PropTypes.bool,\n}; */\n\nexport default DiscussionBox;\n","import React, { Component } from 'react';\n\nimport DiscussionBox from './DiscussionBox';\n\nclass FeedBox extends Component {\n  renderSort() {\n    const {\n      activeSortingMethod,\n      onChangeSortingMethod,\n    } = this.props;\n\n    if (this.props.type === 'general') {\n      return (\n        <div >\n          <span\n\n            onClick={() => onChangeSortingMethod('date')}\n          >\n            Latest\n          </span>\n          <span\n\n            onClick={() => onChangeSortingMethod('popularity')}\n          >\n            Popular\n          </span>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderEmptyDiscussionLine(loading, discussions) {\n    if (!loading) {\n      if (!discussions || discussions.length === 0) {\n        return <div >No discussions...</div>;\n      }\n    }\n  }\n\n  render() {\n    const {\n      type,\n      loading,\n      discussions,\n      currentForum,\n      userProfile,\n    } = this.props;\n\n    let discussionBoxTitle = '';\n    if (type === 'general') discussionBoxTitle = 'Discussions';\n    if (type === 'pinned') discussionBoxTitle = 'Pinned';\n\n    return (\n      <div >\n        <div >\n          {!userProfile && this.renderSort()}\n        </div>\n        {loading && <div className=\"d-flex justify-content-center align-items-center\"><div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div></div>}\n        {this.renderEmptyDiscussionLine(loading, discussions)}\n        {!loading &&\n          <div >\n            {discussions && discussions.map((discussion) =>\n              <DiscussionBox\n                discussion={discussion}\n                userProfile={userProfile}\n                discussionType={type}\n                key={discussion._id}\n                idKey={discussion._id}\n\n              />\n            )}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nFeedBox.defaultProps = {\n  type: 'general',\n  loading: false,\n  discussions: [],\n  currentForum: 'general',\n  activeSortingMethod: 'date',\n  onChangeSortingMethod: (val) => { },\n  userProfile: false,\n};\n\n/* FeedBox.propTypes = {\n  //type: React.PropTypes.oneOf(['general', 'pinned']),\n  loading: React.PropTypes.bool,\n  discussions: React.PropTypes.array,\n  currentForum: React.PropTypes.string,\n  activeSortingMethod: React.PropTypes.string,\n  onChangeSortingMethod: React.PropTypes.func,\n  userProfile: React.PropTypes.bool,\n}; */\n\nexport default FeedBox;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router';\n\n\nimport Button from '../../Components/Button';\n\nclass SideBar extends Component {\n  render() {\n    const {\n      currentForum,\n    } = this.props;\n\n    return (\n      <div >\n        <Link to={`/${currentForum}/new_discussion`}>\n          <Button type='outline' fullWidth noUppercase>\n            New Discussion\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\n\nSideBar.defaultProps = {\n  currentForum: 'general',\n};\n\n/* SideBar.propTypes = {\n  currentForum: React.PropTypes.string,\n}; */\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport NewDiscussion from '../NewDiscussion/index';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { Button as ButtonBootstrap, Container, Modal, Image as ImageBootstrap, Popover, Col, Row, Card } from 'react-bootstrap';\n\nimport {\n  getDiscussions,\n  updateSortingMethod,\n} from './actions';\n\n\nimport FeedBox from '../../Components/FeedBox';\nimport SideBar from '../../Components/SideBar';\n\n\n\n\nlet timer;\n\nclass ForumFeed extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      canvasHeight: 0,\n      canvasWidth: 0,\n      coordinates: null,\n      loadedEncodedImages: {},\n      showModal: false,\n      imageOnModal: '',\n      showUploadTilesButton: false,\n      showUploadMosaicImageButton: false,\n      toUploadTilesList: null,\n      toUploadMosaicList: null,\n      showSuccessMessage: false,\n      successMessage: '',\n      tileSize: null,\n      timesWider: '1',\n      widthHeight: '3',\n      quality: 100,\n      showTooltip: false,\n      currentForumId: null,\n      showDiscussionModal: false\n    }\n    this.canvas = React.createRef()\n  }\n\n  setImageModalPopover = (imgName) => {\n    this.setState({ imageOnModal: this.state.loadedEncodedImages[imgName], loadingImage: false })\n  }\n\n  closeModal = () => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  getIndividualImage = (x, y) => {\n\n    for (let attr in this.state.coordinates) {\n\n      const imageCoordinates = attr.split('-')\n      const imageCoordinatesX = parseInt(imageCoordinates[0])\n      const imageCoordinatesY = parseInt(imageCoordinates[1])\n      if ((x >= imageCoordinatesX && x <= (imageCoordinatesX + this.state.tileSize)) && (y >= imageCoordinatesY && y <= (imageCoordinatesY + this.state.tileSize))) {\n        const imgName = this.state.coordinates[attr]\n\n        if (Object.keys(this.state.loadedEncodedImages).includes(imgName) && this.state.loadedEncodedImages[imgName]) {\n\n          this.setImageModalPopover(imgName)\n        } else {\n          this.setState({ loadingImage: true }, () => {\n            axios.get('/api/forum/tile?tileFileName=' + imgName + '&forumId=' + this.state.currentForumId).then(response => {\n              this.setState({\n                loadedEncodedImages: {\n                  ...this.state.loadedEncodedImages,\n                  [imgName]: response.data.base64\n\n                }\n              }, () =>\n                this.setImageModalPopover(imgName)\n\n              )\n            }).catch(e => console.error(e))\n          })\n\n        }\n\n\n        break\n      }\n\n    }\n  }\n\n  getCoordenate = (e) => {\n\n\n\n\n    const rect = e.target.getBoundingClientRect()\n    const clientX = e.clientX\n    const clientY = e.clientY\n    const x = clientX - rect.left\n    const y = clientY - rect.top\n\n\n    if (timer !== undefined) {\n      window.clearTimeout(timer)\n    }\n    timer = window.setTimeout(() => {\n\n      if (!this.state.inPopover) {\n        this.setState({\n          x: clientX,\n          y: clientY\n        }, () => {\n          if (!this.state.showModal) {\n            this.getIndividualImage(x, y)\n          }\n        }\n\n\n        )\n      }\n\n    }, 500);\n\n\n\n\n\n\n  }\n\n  drawImage = (currentForumObj) => {\n    const context = this.canvas.current.getContext('2d')\n    const img = new Image()\n    const that = this;\n    img.onload = function () {\n\n      let state = {\n        canvasWidth: this.width,\n        canvasHeight: this.height,\n        loading: false,\n        coordinates: currentForumObj.mosaic.coordinates,\n        tileSize: parseInt(currentForumObj.mosaic.tile_size)\n      }\n\n\n      that.setState(state, () => {\n        that.canvas.current.width = that.state.canvasWidth\n        that.canvas.current.height = that.state.canvasHeight\n        context.drawImage(this, 0, 0, this.width, this.height)\n      })\n\n    }\n\n    img.src = 'data:image/jpeg;base64,' + currentForumObj.mosaic.base64\n  }\n  componentDidMount() {\n    const {\n      currentForumId,\n      getDiscussions,\n\n      getCurrentForum\n\n    } = this.props;\n\n    // get the discussions and pinned discussions\n    getDiscussions(currentForumId());\n\n    const currentForumObj = getCurrentForum();\n\n    if (currentForumObj) {\n      this.setState({\n        currentForumObj\n      }, () => {\n        if (currentForumObj.mosaic) {\n          this.setState({ currentForumId: currentForumObj._id }, () => this.drawImage(currentForumObj))\n        }\n      })\n\n\n    }\n\n\n\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      currentForum,\n      currentForumId,\n      getDiscussions,\n      getPinnedDiscussions,\n      getCurrentForum\n    } = this.props;\n\n\n\n    // get the discussions again\n    // if the forum didn't matched\n    if (prevProps.currentForum !== currentForum) {\n      const feedChanged = true;\n      getDiscussions(currentForumId(), feedChanged);\n\n\n      const currentForumObj = getCurrentForum();\n\n      if (currentForumObj) {\n        this.setState({\n          currentForumObj\n        }, () => {\n          if (currentForumObj.mosaic) {\n            this.setState({ currentForumId: currentForumObj._id }, () => this.drawImage(currentForumObj))\n          }\n        })\n\n\n      }\n\n\n    }\n  }\n\n  successCallback = () => {\n    window.location = \"/\"\n  }\n\n  handleSortingChange(newSortingMethod) {\n    const {\n      currentForum,\n      getDiscussions,\n      updateSortingMethod,\n      sortingMethod,\n    } = this.props;\n\n    if (sortingMethod !== newSortingMethod) {\n      updateSortingMethod(newSortingMethod);\n      getDiscussions(currentForum, false, true);\n    }\n  }\n\n  renderNewDiscussionButtion() {\n    const { currentForum } = this.props;\n\n    return (\n      <div >\n\n        <ButtonBootstrap className=\"camera\" onClick={() => this.setState({ showDiscussionModal: true })}>\n          Post a Photo\n          </ButtonBootstrap>\n\n        <Modal className=\"new-discussion-modal\" show={this.state.showDiscussionModal} size=\"xl\" onHide={() => this.setState({ showDiscussionModal: false })}>\n          <Modal.Header closeButton>\n            <Modal.Title>Post a Photo</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"p-0\">\n            <NewDiscussion successCallback={this.successCallback} />\n          </Modal.Body>\n\n        </Modal>\n\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      currentForum,\n      discussions,\n      fetchingDiscussions,\n      pinnedDiscussions,\n      fetchingPinnedDiscussions,\n      sortingMethod,\n      error,\n    } = this.props;\n\n    if (error) {\n      return (\n        <div >\n          {error}\n        </div>\n      );\n    }\n\n    return (\n      <section className=\"forum-feed\">\n\n        <Helmet><title>{`Mosaic Forum | ${currentForum}`}</title></Helmet>\n        <Container className=\"forum-feed__canvas-container pt-5 pb-5\" fluid>\n          <Container className=\"justify-content-center d-flex flex-wrap\">\n            <section className=\"intro w-100 pb-4\">\n              <h1><strong>Community Photo Mosaic: Ongoing Exercise</strong></h1>\n              <div className=\"d-flex flex-wrap mt-4\">\n                <strong className=\"w-100\">\n                  Directions\n                </strong>\n                <p className=\"w-75 pr-5\">\n\n\n                  View the mosiac image below. Rollover individual images to see a larger thumbnail view, or click to view the full image with description and comments. Post your own photo and be part of the community.\n\n              </p>\n                <div className=\"w-25\">\n                  {this.renderNewDiscussionButtion()}\n                </div>\n              </div>\n            </section>\n            <Popover placement=\"right\"\n              style={{ display: this.state.loading || !this.state.coordinates ? 'none' : 'block', top: this.state.y, left: this.state.x }} onClick={() => this.setState({ showModal: true })}\n              onMouseOut={() => this.setState({ inPopover: false })} onMouseOver={() => this.setState({ inPopover: true })} >\n\n              <Popover.Content>\n                {this.state.loadingImage ? <div className=\"d-flex mt-2 justify-content-center align-items-center\"><div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div></div> : <ImageBootstrap src={'data:image/jpeg;base64, ' + this.state.imageOnModal} thumbnail />}\n\n\n              </Popover.Content>\n            </Popover>\n            <canvas onMouseMove={this.getCoordenate} ref={this.canvas}></canvas>\n          </Container>\n        </Container>\n        <Container className=\"pt-4\">\n          <Row>\n            <Col md=\"8\" >\n              {this.renderNewDiscussionButtion()}\n\n              <FeedBox\n                type='general'\n                loading={fetchingDiscussions}\n                discussions={discussions}\n                currentForum={currentForum}\n                onChangeSortingMethod={this.handleSortingChange.bind(this)}\n                activeSortingMethod={sortingMethod}\n              />\n\n\n            </Col>\n            <Col md=\"4\">\n              <section className=\"forum-feed__social d-flex justify-content-around pr-4 pl-4 pb-4\">\n                <span className=\"fa-stack fa-lg\">\n                  <i className=\"fa fa-circle facebook fa-stack-2x\"></i>\n                  <i className=\"fa fa-facebook fa-stack-1x fa-inverse\"></i>\n                </span>\n                <span className=\"fa-stack fa-lg \">\n                  <i className=\"fa fa-circle linkedin fa-stack-2x\"></i>\n                  <i className=\"fa fa-linkedin fa-stack-1x fa-inverse\"></i>\n                </span>\n                <span className=\"fa-stack fa-lg \">\n                  <i className=\"fa fa-circle twitter fa-stack-2x\"></i>\n                  <i className=\"fa fa-twitter fa-stack-1x fa-inverse\"></i>\n                </span>\n                <span className=\"fa-stack fa-lg\">\n                  <i className=\"fa fa-circle fa-stack-2x\"></i>\n                  <i className=\"fa fa fa-envelope fa-stack-1x fa-inverse\"></i>\n                </span>\n                <span className=\"fa-stack fa-lg\">\n                  <i className=\"fa fa-circle fa-stack-2x\"></i>\n                  <i className=\"fa fa-print fa-stack-1x fa-inverse\"></i>\n                </span>\n                <span className=\"fa-stack fa-lg\">\n                  <i className=\"fa fa-circle fa-stack-2x\"></i>\n                  <i className=\"fa fa-user-plus fa-stack-1x fa-inverse\"></i>\n                </span>\n\n              </section>\n              <Card className=\"mb-3\">\n                <Card.Header><h5>Mosaic Overview</h5></Card.Header>\n                <Card.Body>\n\n                  <Card.Text className=\"small mb-3\">\n                    {this.state.currentForumObj ? <ImageBootstrap src={'data:image/jpeg;base64, ' + this.state.currentForumObj.base64} fluid /> : null}\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc et nibh a risus sodales faucibus id sed nulla. Nam erat mi, volutpat id lobortis in, congue nec ante. Proin eu enim sed enim molestie accumsan fermentum at nisi. Donec et ultrices nulla. In et euismod odio, in consectetur tellus. Maecenas a vulputate orci. Proin venenatis hendrerit urna.\n\n\n                  </Card.Text>\n\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Header><h5>About the Moderator</h5></Card.Header>\n                <Card.Body>\n                  <section className=\"moderator-card d-flex\">\n                    <div className=\"moderator-card__img-container w-25\">\n                      {this.state.currentForumObj && this.state.currentForumObj.admin ? <ImageBootstrap src={this.state.currentForumObj.admin.avatarUrl} fluid /> : null}\n                    </div>\n                    <div className=\"w-75\">\n                      <div className=\"w-100\">\n                        <strong>NAME: </strong>\n\n                        <p className=\"mb-0\"> {this.state.currentForumObj && this.state.currentForumObj.admin ? this.state.currentForumObj.admin.name : null}</p>\n                      </div>\n\n                      <div className=\"w-100\">\n                        <strong>Nunc et nibh:</strong>\n                        <p>a risus sodales faucibus id sed nulla. </p>\n                      </div>\n                    </div>\n\n                  </section>\n                  <Card.Text className=\"small mb-3\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc et nibh a risus sodales faucibus id sed nulla. Nam erat mi, volutpat id lobortis in, congue nec ante. Proin eu enim sed enim molestie accumsan fermentum at nisi. Donec et ultrices nulla. In et euismod odio, in consectetur tellus. Maecenas a vulputate orci. Proin venenatis hendrerit urna.\n                  </Card.Text>\n\n                </Card.Body>\n              </Card>\n            </Col>\n\n          </Row>\n\n        </Container>\n\n        <Modal size=\"xl\" show={this.state.showModal} onHide={this.closeModal}>\n          <Modal.Header closeButton>\n          </Modal.Header>\n          <Modal.Body className=\"text-center\">\n            <div className=\"tile-image-container\"\n              style={{\n                height: '100%',\n                backgroundImage: 'url(\"data:image/jpeg;base64, ' + this.state.imageOnModal + '\")',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'contain',\n                backgroundPosition: 'center',\n              }}></div>\n          </Modal.Body>\n          <Modal.Footer>\n            <ButtonBootstrap variant=\"secondary\" onClick={this.closeModal}>\n              Close\n        </ButtonBootstrap>\n          </Modal.Footer>\n        </Modal>\n      </section>\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    return {\n      currentForum: state.app.currentForum,\n      currentForumId: () => {\n        const currentForumObj = _.find(state.app.forums, { forum_slug: state.app.currentForum });\n        if (currentForumObj) return currentForumObj._id;\n        else return null;\n      },\n      getCurrentForum: () => {\n        const currentForumObj = _.find(state.app.forums, { forum_slug: state.app.currentForum });\n        if (currentForumObj) return currentForumObj;\n        else return null;\n      },\n      fetchingDiscussions: state.feed.fetchingDiscussions,\n      discussions: state.feed.discussions,\n      fetchingPinnedDiscussions: state.feed.fetchingPinnedDiscussions,\n      sortingMethod: state.feed.sortingMethod,\n      error: state.feed.error,\n    };\n  },\n  (dispatch) => {\n    return {\n      getDiscussions: (currentForumId, feedChanged, sortingMethod, sortingChanged) => { dispatch(getDiscussions(currentForumId, feedChanged, sortingMethod, sortingChanged)); },\n\n      updateSortingMethod: (method) => { dispatch(updateSortingMethod(method)); },\n    };\n  }\n)(ForumFeed);\n","import _ from 'lodash';\nimport {\n  START_FETCHING_DISCUSSIONS,\n  STOP_FETCHING_DISCUSSIONS,\n  FETCHING_DISCUSSIONS_SUCCESS,\n  FETCHING_DISCUSSIONS_FAILURE,\n\n  START_FETCHING_PINNED_DISCUSSIONS,\n  STOP_FETCHING_PINNED_DISCUSSIONS,\n  FETCHING_PINNED_DISCUSSIONS_SUCCESS,\n  FETCHING_PINNED_DISCUSSIONS_FAILURE,\n\n  UPDATE_SORTING_METHOD,\n  INVALID_FORUM,\n} from './constants';\nimport {\n  fetchDiscussions,\n  fetchPinnedDiscussions,\n} from './api';\n\n/**\n * find the id for current forum\n * @param  {Object} state   the state object\n * @param  {String} forum   current forum\n * @return {Number}         the forum id\n */\nconst findForumId = (state, forum) => {\n  const { forums } = state.app;\n  const forumId = _.find(forums, { forum_slug: forum });\n\n  if (forumId) { return forumId._id; }\n  else { return null; }\n};\n\n/**\n * action to fetch forum discussions\n * @param  {String}  forum               current forum slug\n * @param  {Boolean} feedChanged         if the feed has been changed, default is false\n * @param  {String}  sortingMethod       define the sorting method, default is 'date'\n * @param  {Boolean} sortingChanged      if user chagned the sorting method\n * @return {thunk}\n */\nexport const getDiscussions = (forumId, feedChanged=false, sortingChanged=false) => {\n  return (dispatch, getState) => {\n    const sortingMethod = getState().feed.sortingMethod;\n\n    // show the loading message when user change forum or change sorting method\n    if (feedChanged || sortingChanged) dispatch({ type: START_FETCHING_DISCUSSIONS });\n\n    if (!forumId) {\n      dispatch({ type: INVALID_FORUM });\n    }\n    else {\n      // start fetching discussions\n      fetchDiscussions(forumId, sortingMethod).then(\n        data => {\n          \n          return dispatch({ type: FETCHING_DISCUSSIONS_SUCCESS, payload: data.data })\n        },\n        error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE })\n      );\n    }\n  };\n};\n\n/**\n * action to fetch forum pinned discussions\n * @param  {String}  forum                current forum\n * @param  {Boolean} [feedChanged=false]  if the feed has been changed\n * @return {thunk}\n */\nexport const getPinnedDiscussions = (forumId, feedChanged) => {\n  return (dispatch, getState) => {\n    // show the loading message when user change forum\n    if (feedChanged) dispatch({ type: START_FETCHING_PINNED_DISCUSSIONS });;\n\n    if (!forumId) {\n      dispatch({ type: INVALID_FORUM });\n    }\n    else {\n      // start fetching pinned discussions\n      return fetchPinnedDiscussions(forumId).then(\n        data => dispatch({ type: FETCHING_PINNED_DISCUSSIONS_SUCCESS, payload: data.data }),\n        error => { console.log(error); dispatch({ type: FETCHING_PINNED_DISCUSSIONS_FAILURE }); }\n      );\n    }\n  };\n};\n\n/**\n * Update sorting method\n * @param  {String} method\n * @return {action}\n */\nexport const updateSortingMethod = (method) => {\n  return { type: UPDATE_SORTING_METHOD, payload: method };\n};\n","import React, { Component } from 'react';\n\n\n\nclass Profile extends Component {\n  render() {\n    const {\n      name,\n      gitHandler,\n      location,\n      avatarUrl,\n    } = this.props;\n\n    return (\n      <div >\n        <div >\n          <img  src={avatarUrl} alt={`${name} avatar`} />\n        </div>\n        <div >\n          <div >{ name }</div>\n          <div ><i ></i> { gitHandler }</div>\n          <div >{ location }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfile.defaultProps = {\n  name: 'Hello World',\n  gitHandler: 'helloWorld',\n  location: 'Somewhere in the world',\n  avatarUrl: 'https://google.com',\n};\n\n/* Profile.propTypes = {\n  name: React.PropTypes.string,\n  gitHandler: React.PropTypes.string,\n  location: React.PropTypes.string,\n  avatarUrl: React.PropTypes.string,\n}; */\n\nexport default Profile;\n","import {\n  FETCH_USER_PROFILE_START,\n  FETCH_USER_PROFILE_SUCCESS,\n  FETCH_USER_PROFILE_FAILURE,\n} from './constants';\n\nimport {\n  fetchUserProfileApi,\n} from './api';\n\n/**\n * fetch the users profile from the server\n * @param  {String} userSlug\n * @return {action}\n */\nexport const fetchUserProfile = (userSlug) => {\n  return (dispatch, getState) => {\n    dispatch({ type: FETCH_USER_PROFILE_START });\n\n    fetchUserProfileApi(userSlug).then(\n      data => {\n        if (data.data.error) dispatch({ type: FETCH_USER_PROFILE_FAILURE });\n        else dispatch({ type: FETCH_USER_PROFILE_SUCCESS, payload: data.data });\n      },\n      error => dispatch({ type: FETCH_USER_PROFILE_FAILURE })\n    );\n  };\n};\n","/**\n * user profile apis\n */\n\nimport axios from 'axios';\n\nexport const fetchUserProfileApi = (userSlug) => {\n  return axios.get(`/api/user/profile/${userSlug}`);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\n\n\n\n// components used in this view\nimport Profile from '../../Components/UserProfile/Profile';\nimport FeedBox from '../../Components/FeedBox';\n\n// actions\nimport {\n  fetchUserProfile,\n} from './actions';\n\nclass UserProfile extends Component {\n  componentDidMount() {\n    const { fetchUserProfile } = this.props;\n    const { username } = this.props.params;\n    fetchUserProfile(username);\n  }\n\n  componentWillReceiveProps(newProps) {\n    // fetch profile if different username\n    const { username: oldUsername } = this.props.params;\n    const { username: futureUsername } = newProps.params;\n\n    // only update if different usernames\n    if (oldUsername !== futureUsername) {\n      const { fetchUserProfile } = this.props;\n      fetchUserProfile(futureUsername);\n    }\n  }\n\n  render() {\n    const {\n      fetchingProfile,\n      profile,\n      error,\n    } = this.props;\n\n    if (error) {\n      return <div >{ error }</div>;\n    }\n\n    const {\n      name,\n      username,\n      avatarUrl,\n      github,\n      discussions,\n    } = profile;\n\n    if (fetchingProfile) {\n      return (\n        <div >\n          Loading users profile ...\n        </div>\n      );\n    }\n\n    return (\n      <div >\n        <Helmet><title>{`${name || username} | ReForum`}</title></Helmet>\n\n        <div >\n          <Profile\n            name={name}\n            gitHandler={username}\n            location={github.location}\n            avatarUrl={avatarUrl}\n          />\n\n          <FeedBox\n            userProfile\n            type='general'\n            discussions={discussions}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => { return {\n    fetchingProfile: state.userProfile.fetchingProfile,\n    profile: state.userProfile.profile,\n    error: state.userProfile.error,\n  }; },\n  (dispatch) => { return {\n    fetchUserProfile: (userSlug) => { dispatch(fetchUserProfile(userSlug)); },\n  }; }\n)(UserProfile);\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <h3>Coudn't found the url buddy. Please check it out.</h3>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, browserHistory, IndexRoute } from 'react-router';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n// app store\nimport appStore from './App/store';\n\n// app views\nimport AppContainer from './App/App';\nimport AdminContainer from './App/Admin';\nimport Dashboard from './Views/AdminDashboard';\n\nimport ForumFeed from './Views/ForumFeed';\nimport SingleDiscussion from './Views/SingleDiscussion';\nimport NewDiscussion from './Views/NewDiscussion';\nimport UserProfile from './Views/UserProfile';\nimport NotFound from './Views/NotFound';\n\nReactDOM.render (\n    <Provider store={appStore}>\n        <Router history={browserHistory}>\n            <Route path=\"/admin\" component={AdminContainer}>\n                <IndexRoute component={Dashboard} />\n            </Route>\n            <Route path=\"/\" component={AppContainer}>\n                <IndexRoute component={ForumFeed} />\n                <Route path=\":forum\" component={ForumFeed} />\n                <Route path=\":forum/discussion/:discussion\" component={SingleDiscussion} />\n                <Route path=\":forum/new_discussion\" component={NewDiscussion} />\n                <Route path=\"user/:username\" component={UserProfile} />\n                <Route path=\"*\" component={NotFound} />\n            </Route>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/thumbsup-icon.02cd542c.svg\";"],"sourceRoot":""}